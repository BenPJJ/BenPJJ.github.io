<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[V8引擎详解]]></title>
    <url>%2F2018%2F06%2F27%2FV8%E5%BC%95%E6%93%8E%E8%AF%A6%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[编辑语言(2种) 编译型语言和解释型语言(解释型语言的执行速度是慢于编译型语言) 编译型语言:定义:在执行之前要先进行完全编译 解释型语言:定义:一边编译一边执行 JavaScript定义:是一种解释型脚本语言,支持动态类型、弱类型、基于原型的语言,内置支持类型 #![https://github.com/BenPJJ/img-storage/blob/master/webkit.png]]]></content>
  </entry>
  <entry>
    <title><![CDATA[移动端web布局适配方法]]></title>
    <url>%2F2018%2F06%2F26%2F%E7%A7%BB%E5%8A%A8%E7%AB%AFweb%E5%B8%83%E5%B1%80%E9%80%82%E9%85%8D%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[1,固定高度,宽度百分比(淘汰) 2,Media Query(媒体查询)(一般流行)3,flex布局(火热流行)rem (font size of the root element)是相对长度单位,相对于根元素(即html元素)font-size计算值的倍数 例如:123456789101112131415161718192021222324252627282930313233&lt;style&gt; .test&#123; width: 320px; height: 160px; background-color: bisque; text-align: center; &#125; .hello&#123; color: red; &#125; //为什么设置宽度是320px,是因为只适应最小屏幕i5&lt;/style&gt; &lt;div class='test'&gt; &lt;p class='hello'&gt;Hello Ben&lt;/p&gt;&lt;/div&gt;&lt;script&gt; rem+javascript完成屏幕适配 第一种: (function()&#123; var html = document.documentElement; var hwidth = html.getBoundingClientRect().width; html.style.fontSize = hwidth /15 +'px'; &#125;)() 第二种: let htmlWidth = document.documentElement.clientWidth || document.body.clientWidth; let htmlDom = document.getElementsByTagName('html')[0]; htmlDom.style.fontSize = htmlWidth/20 +'px'; 除以多少完全是看你一谁为适配例子,这里是以i5&lt;/script&gt;]]></content>
  </entry>
  <entry>
    <title><![CDATA[css字体]]></title>
    <url>%2F2018%2F06%2F12%2Fcss%E5%AD%97%E4%BD%93%2F</url>
    <content type="text"><![CDATA[1,镂空的字体 例如:1234h3&#123; color: transparent; -webkit-text-stroke: 4px red; &#125; 2,内浮雕效果例如:12345678深色自内浮雕效果h3&#123; text-shadow: 1px 1px 0 rgba(255,255,255,0.7);&#125;浅色字内浮雕效果h3&#123; text-shadow: -1px -1px 0 rgba(0,0,0,0.7);&#125;]]></content>
  </entry>
  <entry>
    <title><![CDATA[JavaScript高级程序设计]]></title>
    <url>%2F2018%2F06%2F11%2FJavaScript%E9%AB%98%E7%BA%A7%E7%A8%8B%E5%BA%8F%E7%BC%96%E7%A8%8B%E8%AE%BE%E8%AE%A1%2F</url>
    <content type="text"><![CDATA[第一章 JavaScript简介 javascript组成javascript核心：ECMAScript(核心) DOM(文档对象模型) BOM(brower object document浏览器对象模型) ECMAScript: 提供核心语言功能DOM: 提供访问和操作网页内容的方法和接口BOM: 提供与浏览器交互的方法和接口 语言组成语法 类型 语句 关键字 保留字 操作符 对象 文档对象模型(DOM)定义: 针对XML但经过扩展用于HTML的应用程序编程接口 原理: DOM把整个页面映射为一个多层节点结构，借助DOM提供的API,轻松自如地删除、添加、替换或修改任何节点 浏览器对象模型(BOM)定义: 控制浏览器显示的页面以外的部分,习惯上也把所有针对浏览器的JavaScript扩展算作BOM的一部分 例如:12345671,弹出新浏览窗口2,移动、缩放和关闭浏览器窗口3,提供浏览器详细信息的navigator对象4,提供浏览器所加载页面的详细信息的location对象5,提供用户显示器分辨率详细信息的screen对象6,对cookies的支持7,像XMLHttpRequest 和 IE的ActiveXObject自定义对象 第二章 在HTML中使用JavaScript元素向HTML页面中插入JavaScript的主要方法 属性(还有用的):12type: 编写代码使用的脚本语言的内容类型(MIME类型)src: 要执行代码的外部文件 标签的位置1,惯例放在页面元素中产生的问题:在文档的元素中包含所有JavaScript文件,意味着必须等到全部JavaScript代码全部都被下载、解析和执行完成以后,才能开始呈现页面的内容(浏览器在遇到标签时才开始呈现内容)。 对于需要很多JavaScript代码的页面来说,无疑会导致浏览器在呈现页面时出现明显的延迟,而延迟期间的浏览器窗口中将是一片空白。解决方法:放在元素后面 第三章 基本概念语法1,区分大小写 2,标识符(变量、函数、属性的名字、函数的参数) 规则:1234第一个字符可以是一个字母、下划线(_)、一个美元符号($)其他字符可以是字母、下划线、美元符号或数字惯例采用驼峰大小写格式,也就是第一个字母小写,剩下的每个有意义的单词的首字母大写不能把关键字、保留字、true、false和null用作标识符 3,注释//单行注释 /*多行(块级)注释 / 4,严格模式(es5引入)定义: 为JavaScript定义了一种不同的解析与执行模型 例如:1234567在整个脚本中启用,在顶部添加"use atrict";在函数内部启用function ()&#123; "use atrict";&#125; 浏览器支持: IE10+、FF4+、Safari5.1+、O12+、Chrome 5,关键字break do instanceof typeofcase else new varcatch finally return voidcontinue for switch whiledebugger(es5) function this withdefault if throwdelete in try 6,保留字(在js中还没有任何特定的用途)abstract enum int shortboolean export insterface staticbtye extends long superchar final native synchronizedclass float package throwsconst goto private transientdebugger implements protected volatiledouble import public let(es5) yield(es5) es5把在非严格模式下运行时的保留字缩减为下列这些:class enum extends superconst export import 7,变量ECMAScript的变量是松散类型,即可以用来保存任何类型的数据,变量仅仅是一个用来保存值的占位符 8,数据类型6种数据类型:number、string、boolean、undefined、null(5种基本数据类型),object 9,typeof操作符检查变量的数据类型,返回undefined(未定义)、boolean、string、number、object(对象或null)、function 10,undefined类型未初始化,无论在什么情况下都没有必要把一个变量的值显式地设置为undefined 11,null类型空对象指针实际上,undefined值是派生自null值的,所以null == undefined ; true只要意在保存对象的变量还没有真正保存对象,就应该明确地让该变量保存null值 12,boolean类型转型函数Boolean()可以对任何数据类型的值调用Boolean()函数,总会返回一个Boolean值,返回时true、false取决于要转换值的数据类型及其实际值 13,number类型NaN非数值(not a number)是一个特殊的数值,用于表示一个本来要返回数值的操作数未返回数值的情况(这样就不会抛出错误) 特点:1231,任何涉及NaN的操作(如NaN/10)都会返回NaN2,NaN与任何值都不相等,包括NaN本身 NaN == NaN; false isNaN()函数,可以确定参数(任何类型)是否’不是数值’判断过程:isNaN()在接到一个值之后,会尝试将这个值(字符串’10’或Boolean)转换为数值返回false,不能被转换为数值的值都会返回trueisNaN(NaN) trueisNaN(10) falseisNaN(‘10’) falseisNaN(‘blue’) falseisNaN(true) false 14,数值转换Number()、parseInt()、parseFloat()都可以把非数值转换为数值 Number()转型函数可以用于任何数据类型 规则:1234true或false 1、0数字值 不变null 0undefined NaN parseInt()、parseFloat()专门用于把字符串转换成数值 parseInt()规则:121,在转换字符串时,会忽略字符串前面的空格,直至找到第一个非空格字符2,如果第一个字符不是数字字符或负号,返回NaN 15,string类型转换为字符串1,toString()每个字符串都有一个toString()方法,除null和undefined值没有 2,String()任何类型的值都可以转换为字符串 16,Object类型Object的每个实例都具有下列属性和方法 例如:1234567Constructor 保存着用于创建当前对象的函数hasOwnProperty(propertyName) 用于检查给定的属性在当前对象实例中是否存在 isPrototypeOf(object) 用于检查传入的对象是否是另一个对象的原型propertyIsEnumerable(propertyName) 检查给定的属性是否能够使用for-in语句toLocaleString() 返回对象的字符串,该字符串与执行环境的地区对应toString() 返回对象的字符串 valueOf() 返回对象的字符串、数值、布尔值 17,操作符定义:描述了一组用于操作数据值的操作符有:算术、位、关系、相等操作符特点:能够适用于很多值 1,一元操作符定义:只能操作一个值的操作符 2,位操作符 3,布尔操作符有3个:非(!)、与(&amp;&amp;)、或(||) 4,条件操作符 18,语句(流控制语句)定义:使用一或多个关键字来完成给定任务 1,if语句if(){}else{} 2,do-while语句是一种后测试循环语句,即只有在循环体中的代码执行之后,才会测试出口条件;换句话说,在对条件表达式求值之前,循环体内的代码至少会被执行一次 3,while语句前测试循环语句,也是说,在循环体内的代码被执行之前,就会对出口条件求值,循环体内的代码有可能永远不会被执行 4,for语句 5,for-in语句一种精准的迭代语句,可以用来枚举对象的属性(es5)如果要迭代的对象的变量值为null或undefined,不会执行循环体 6,break 和 continue语句break语句会立即退出循环,强制继续执行循环后面的语句 continue语句会立即退出循环,但退出循环后会从循环的顶部继续执行 7,with语句(淘汰了)作用:将代码的作用域设置到一个特定的对象中 例如:12345678910var qs = location.search.substring(1);var hostName = location.hostName;var url = location.href;改:with(location)&#123; var qs = search.substring(1); var hostName = hostName; var url = href;&#125; 8,switch语句 9,函数任何函数在任何时候都可以通过return语句后跟要返回的值来实现返回值位于return语句之后的任何代码都永远不会执行 10,理解函数es函数不介意传递进来多少个参数,也不在乎传进来参数是什么数据类型,原因:es中的参数在内部是用一个数组来表示的,函数接收到的始终都是这个数组实际上,在函数体内可以通过arguments对象来访问这个参数数组,从而获取传递给函数的每一个参数 没有传递值的命名参数将自动被赋予undefined值 11,没有重载重载定义:可以为一个函数编写两个定义,只要这两个定义的签名(接受的参数的类型和数量)不同即可 第四章 变量、作用域和内存问题基本类型和引用类型的值定义:基本类型值指简单的数据段;引用类型值指由多个值构成的对象 5种基本数据类型是按值访问的,操作保存在变量中的实际的值 引用类型值是保存在内存中的对象,JavaScript不允许直接访问内存中的位置,也就是不能直接操作对象的内存空间。实际上是在操作对象的引用而不是实际的对象 复制变量值基本类型值是栈内存 例如:123var num1 = 5;var num2 = num2;从一个变量向另一个变量复制基本类型的值,会创建这个值的一个副本 引用类型值是堆内存 例如:12345var obj1 = new Object();var obj2 = obj1;obj1.name = "ben";alert(obj2.name); //"ben"从一个变量向另一个变量复制引用类型的值,复制的其实是指针,因此两个变量最终都指向同一个对象 检测类型typeof 可以测 字符串、数组、布尔值、undefined、(一个对象或null)object测基本类型 instanceof 测引用类型 执行环境及作用域1,执行环境(也称作用域)定义:变量或函数有权访问的其他数据,决定了它们各自的行为每个执行环境都有一个与之关联的变量对象,环境中定义的所有变量和函数都保存在这个对象中 全局执行环境被认为是window对象,因此所有全局变量和函数都是作为window对象的属性和方法创建的 一般某个执行环境中的所有代码执行完毕后,该环境被销毁,保存在其中的所有变量和函数定义也随之销毁(全局直到应用程序退出(关闭网页、浏览器)时才会被销毁) 机制:当执行流–&gt;进入一个函数时–&gt;函数的环境–&gt;就会被推入一个环境栈中–&gt;而在函数执行之后–&gt;栈将其环境弹出–&gt;把控制权返回给之前的执行环境 2,作用域链当代码在一个环境中执行时,会创建变量对象的一个作用域链 作用域链用途:保证对执行环境有权访问的所有变量和函数的有序访问 3,没有块级作用域理解:由花括号封闭的代码块都有自己的作用域(用es的话来说就是有自己的执行环境) 例如:123456if(true)&#123; var color = 'blue';&#125;alert(color); //'blue'如果是其他语言,if语句执行完毕后被销毁,但在JavaScript中,if语句中的变量声明会将变量添加到当前的执行环境(指全局环境) 4,垃圾收集JavaScript具有自动垃圾收集机制,也就是说,执行环境会负责管理代码执行过程中使用的内存 原理:找出那些不在继续使用的变量,然后释放其占用的内存 第十章 DOM文档对象模型(DOM)定义: 针对XML但经过扩展用于HTML的应用程序编程接口 原理: DOM把整个页面映射为一个多层节点结构，借助DOM提供的API,轻松自如地删除、添加、替换或修改任何节点 1,节点层次定义:节点分为几种不同的类型,每种类型分别表示文档中不同的信息及标记, 每个节点都拥有各自的特点、数据和方法,另外也与其他节点存在某种关系, 节点之间的关系构成了层次,而所有页面标记则表现为一个以特定节点为跟节点的树形结构 第十三章 事件定义:文档或浏览器窗口中发生的一些特定的交互瞬间 JavaScript与HTML之间的交互式通过事件实现的 1,事件流描述:页面中接收事件的顺序 事件冒泡定义:事件开始时由最具体的元素(文档中嵌套层次最深的那个节点)接收,然后逐级向上传播到较为不具体的节点(文档) 所有现代浏览器都支持事件冒泡 例如:12345678910&lt;html&gt; &lt;head&gt; &lt;title&gt;Event&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;div id='myDiv'&gt;Click Me&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;如何点击&lt;div&gt;元素,事件顺序传播:&lt;div&gt; --&gt; &lt;body&gt; --&gt; &lt;html&gt; --&gt; document --&gt; (window)IE9、ff、chrome会冒泡到window对象 事件捕获定义:不太具体的节点应该更早接收到事件,而最具体的节点应该最后接收到事件IE9、ff、chrome支持事件捕获 DOM事件流定义:有三个阶段:事件捕获阶段 –&gt; 处于目标阶段 –&gt; 事件冒泡阶段 2,事件处理程序(事件侦听器)定义:响应某个事件的函数 事件处理程序的名字以’on’开头 事件处理程序的方式:HTML事件处理程序 例如:1&lt;input type='button' value='Click Me' onclick='showMessage()'/&gt; DOM0级事件处理程序: 例如:1234567var btn = document.getElementById('myBtn');btn.onclick = function()&#123; alert('Clicked');&#125;删除事件方法:btn.onclick = null; DOM2级事件处理程序: 例如:123456789101112131415161718var btn = document.getElementById('myBtn');btn.addEventListener = ('click',function()&#123; alert(this.id);&#125;,false);removeEventListener()移除btn.removeEventListener = ('click',function()&#123; alert(this.id);&#125;,false);//没有用原因:第二个参数与传入addEventListener()中的那一个是完全不同的函数var btn = document.getElementById('myBtn');var handler = function()&#123; alert(this.id);&#125;;btn.addEventListener('click',handler,false);btn.removeEventListener('click',handler,false);//有效 大多数情况下,都是将事件处理程序添加到事件流的冒泡阶段,可以最大限度地兼容各种浏览器 3,事件对象在触发DOM上的某个事件时,会产生一个事件对象event 在事件处理程序内部,对象this始终等于currentTarget(当前正在处理事件的那个元素)的值,而target(事件的目标)则只包含事件的实际目标 在需要通过一个函数处理多个事件时,可以使用type属性 只有在事件处理程序执行期间,event对象才会存在,一旦事件处理程序执行完成,event对象就会被销毁 4,事件类型UI事件:定义:那些不一定与用户操作有关的事件load:当页面完全加载后在window上面触发unload:当页面完全卸载后在window上面触发abort:当用户停止下载过程时error:当发生JavaScript错误时在window上面触发select:当用户选择文本框中的一或多个字符时触发resize:当窗口或框架的大小变化时在window或框架上面触发scroll:当用户滚动带滚动条的元素中的内容是,在该元素上面触发 焦点事件:blur:在元素失去焦点时触发focus:在元素获得焦点时触发 鼠标与滚轮事件(9种):click:单击鼠标dblclick:双击鼠标 mouseenter:只有在鼠标指针穿过被选元素时才触发mouseleave:只有在鼠标指针离开被选元素时才触发 mousemove:鼠标指针在元素内部移动是重复地触发 mouseover:不论鼠标指针穿过被选元素或其子元素,都会触发mouseout:不论鼠标指针离开被选元素还是任何子元素,都会触发 mousedown:按下任意鼠标按钮时触发mouseup:用户释放鼠标按钮时触发 上面9种除了mouseenter和mouseleave所有鼠标事件都会冒泡 比较:mouseover与mouseenter(mouseout与mouseleave同理) 例如:123456789&lt;div class="over"&gt; &lt;h2&gt;被触发的 Mouseover 事件次数：&lt;span&gt;&lt;/span&gt;&lt;/h2&gt; &lt;/div&gt; &lt;div class="enter"&gt; &lt;h2&gt;被触发的 Mouseenter 事件次数：&lt;span&gt;&lt;/span&gt;&lt;/h2&gt; &lt;/div&gt; 同样穿过一次,over会3次,而enter只有1次原理:mouseover会把子元素算上,所以移入div --&gt; 再移入h2 --&gt; 再一次移入div mouseenter只会关注绑定的元素 滚轮事件:clientX、clientY 客户区坐标位置,表示事件发生时鼠标指针在视口中的水平和垂直坐标pageX、pageY 页面坐标事件,鼠标光标在页面中的位置(在页面没有滚动的情况下,pageX和pageY的值与clientX和clienY的值相等)screenX、screenY 屏幕坐标位置,鼠标指针相对于整个屏幕的坐标信息offsetX 光标相对于目标元素边界的x坐标offsetY 光标相对于目标元素边界的y坐标 修改键:按下鼠标键盘 例如:```bash var div1 = document.getElementsByClassName(&quot;over&quot;); div1.addEventListener(&apos;click&apos;,function(e){ var keys = new Array(); if(e.shiftKey){ keys.push(&apos;shift&apos;); } if(e.altKey){ keys.push(&apos;altKey&apos;); } if(e.ctrlKey){ keys.push(&apos;ctrlKey&apos;); } if(e.metaKey){ keys.push(&apos;metaKey&apos;); } alert(&apos;keys&apos;+keys.join(&apos;,&apos;)); }); ``` 键盘与文本事件:keydown 按下键盘上的任意键时触发keypress 按下键盘上的字符键时触发keyup 释放键盘上的键时触发 键码keyCode == 13 回车 设备事件:1,orientationchange 事件(safari)window.orientation属性3个值: 0表示肖像模式 90左旋转的横向模式 -90右旋转的横向模式 2,MozOrientation 事件(ff)事件发生在window对象上,event3个属性 x值0 y值0 z值1竖直状态]]></content>
  </entry>
  <entry>
    <title></title>
    <url>%2F2018%2F06%2F08%2Fjquery.cookie%2F</url>
    <content type="text"><![CDATA[/** * Cookie plugin * * Copyright (c) 2006 Klaus Hartl (stilbuero.de) * Dual licensed under the MIT and GPL licenses: * http://www.opensource.org/licenses/mit-license.php * http://www.gnu.org/licenses/gpl.html * */ /** * Create a cookie with the given name and value and other optional parameters. * * @example $.cookie('the_cookie', 'the_value'); * @desc Set the value of a cookie. * @example $.cookie('the_cookie', 'the_value', {expires: 7, path: '/', domain: 'jquery.com', secure: true}); * @desc Create a cookie with all available options. * @example $.cookie('the_cookie', 'the_value'); * @desc Create a session cookie. * @example $.cookie('the_cookie', null); * @desc Delete a cookie by passing null as value. * * @param String name The name of the cookie. * @param String value The value of the cookie. * @param Object options An object literal containing key/value pairs to provide optional cookie attributes. * @option Number|Date expires Either an integer specifying the expiration date from now on in days or a Date object. * If a negative value is specified (e.g. a date in the past), the cookie will be deleted. * If set to null or omitted, the cookie will be a session cookie and will not be retained * when the the browser exits. * @option String path The value of the path atribute of the cookie (default: path of page that created the cookie). * @option String domain The value of the domain attribute of the cookie (default: domain of page that created the cookie). * @option Boolean secure If true, the secure attribute of the cookie will be set and the cookie transmission will * require a secure protocol (like HTTPS). * @type undefined * * @name $.cookie * @cat Plugins/Cookie * @author Klaus Hartl/klaus.hartl@stilbuero.de */ /** * Get the value of a cookie with the given name. * * @example $.cookie('the_cookie'); * @desc Get the value of a cookie. * * @param String name The name of the cookie. * @return The value of the cookie. * @type String * * @name $.cookie * @cat Plugins/Cookie * @author Klaus Hartl/klaus.hartl@stilbuero.de */ jQuery.cookie = function (name, value, options) { if (typeof value != 'undefined') { // name and value given, set cookie options = options || {}; if (value === null) { value = ''; options.expires = -1; } var expires = ''; if (options.expires && (typeof options.expires == 'number' || options.expires.toUTCString)) { var date; if (typeof options.expires == 'number') { date = new Date(); date.setTime(date.getTime() + (options.expires * 24 * 60 * 60 * 1000)); } else { date = options.expires; } expires = '; expires=' + date.toUTCString() + "; "; // use expires attribute, max-age is not supported by IE } var path = options.path ? '; path=' + options.path : ''; var domain = options.domain ? '; domain=' + options.domain : ''; var secure = options.secure ? '; secure' : ''; document.cookie = [name, '=', encodeURIComponent(value), expires, path, domain, secure].join(''); } else { // only name given, get cookie var cookieValue = null; if (document.cookie && document.cookie != '') { var cookies = document.cookie.split(';'); for (var i = 0; i < cookies.length; i++) { var cookie = jQuery.trim(cookies[i]); // Does this cookie string begin with the name we want? if (cookie.substring(0, name.length + 1) == (name + '=')) { cookieValue = decodeURIComponent(cookie.substring(name.length + 1)); break; } } } return cookieValue; } };]]></content>
  </entry>
  <entry>
    <title><![CDATA[Flex布局]]></title>
    <url>%2F2018%2F06%2F05%2Fcss(flex)%2F</url>
    <content type="text"><![CDATA[设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。 属性:1234567flex-direction 决定主轴的方向（即项目的排列方向）row|row-reverse|column|colum-reverseflex-wrapflex-flowjustify-contentalign-itemsalign-content]]></content>
  </entry>
  <entry>
    <title><![CDATA[javascript:void(0)含义]]></title>
    <url>%2F2018%2F06%2F05%2Fes(06)%2F</url>
    <content type="text"><![CDATA[常见用法 例如:123死连接：&lt;a href='javascript:void(0)'&gt;单击此处什么也不会发生&lt;/a&gt;当用户链接时，void(0) 计算为 0，但 Javascript 上没有任何效果。 href=”#”与href=”javascript:void(0)”的区别例如:12# 包含了一个位置信息，默认的锚是#top 也就是网页的上端javascript:void(0), 仅仅表示一个死链接 void()仅仅是代表不返回任何值，但是括号内的表达式还是要运行]]></content>
  </entry>
  <entry>
    <title><![CDATA[css各种坑(01)---vertical-align与line-height好基友]]></title>
    <url>%2F2018%2F06%2F05%2Fcss%E5%90%84%E7%A7%8D%E5%9D%91(01)%2F</url>
    <content type="text"><![CDATA[vertical-align与line-height好基友 坑:123456789101112131415161718&lt;div style='background-color:#e5edff;'&gt; &lt;img src='img.jpg'&gt; &lt;/div&gt;现象:图片下面有一段空白空间对于内联元素，vertical-align与line-height虽然看不见，但实际上到处都是！！！实践猜想：&lt;div style='background-color:#e5edff;'&gt; &lt;img src='img.jpg'&gt; &lt;div style='display:inline-block;background-color:#ffffff;'&gt;zxx&lt;/div&gt; &lt;/div&gt;现象:zxx对齐的是img的底部vertical-align默认值是baseline, 也就是基线对齐。字符zxx本身是有高度的，于是，图片下面就留空了。解决：1,vertical-align对块状水平的元素无感。img&#123; display: block;&#125;2,设置vertical-align值 bottom/middle/top3,直接设置line-height值 只要行高足够小，实际文字占据的高度的底部就会在x的上面，下面没有了高度区域支撑，自然，图片就会有容器底边贴合在一起了。 vertical-align值:vertical-align 元素的垂直对齐方式 12345&lt;div style='background-color:#e5edff;'&gt; &lt;img src='img.jpg'&gt; &lt;div style='display:inline-block;background-color:#ffffff;'&gt;zxx&lt;/div&gt; &lt;/div&gt;设置vertical-align:bottom/middle/top值现象：zxx对的点不同了]]></content>
  </entry>
  <entry>
    <title><![CDATA[css最新学习的样式]]></title>
    <url>%2F2018%2F06%2F04%2Fcss%E6%9C%80%E6%96%B0%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%A0%B7%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[1,user-modift 用来控制用户能否对页面文本进行编辑[需要兼容] 例如:123read-only 内容只读read-write 内容可读写read-write-plaintext-only 内容可读写，但粘贴内容中的富文本格式（如文本的颜色、大小，图片等）会丢失。内容类似于以纯文本显示]]></content>
  </entry>
  <entry>
    <title><![CDATA[vue]]></title>
    <url>%2F2018%2F06%2F01%2Fvue%2F</url>
    <content type="text"><![CDATA[vue框架特点 1,简洁2,轻量3,快速4,数据驱动5,模块友好6,组件化 内部指令1,绑定click事件v-on:click @click2,绑定动态属性v-bind:href :href3,便捷的修饰符]]></content>
  </entry>
  <entry>
    <title><![CDATA[window.location 对象]]></title>
    <url>%2F2018%2F06%2F01%2Fjs%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E7%BD%91%E5%9D%80%E4%BF%A1%E6%81%AF%2F</url>
    <content type="text"><![CDATA[window.locationwindow.location 对象用于获得当前页面的地址 (URL)，并把浏览器重定向到新的页面。 例如：123456789101112131415161718window前缀可以不写location.pathname 设置或获取对象指定的URL的路径名(路径和文件名)(/E:/privateblog/source/_posts/test02.html)location.href 设置或获取整个URL为字符串(file:///E:/privateblog/source/_posts/test02.html)location.port 设置或获取与URL关联的端口号码(80或443)location.protocol 设置或获取URL的协议部分(http://或https://)location.hash 设置或和获取href属性中在井号"#"后面的分段location.search 设置或获取href属性中跟在问号后面的部分(?a=gdut)(location.search='jj';)substr() 返回一个从指定位置开始的指定长度的子字符串 substr(1) 这里设置为1，是为了把url中的?号去掉split() 将一个字符串分割为子字符串，然后将结果作为字符串数组返回document.domain 用来得到当前网页的域名]]></content>
  </entry>
  <entry>
    <title><![CDATA[css兼容]]></title>
    <url>%2F2018%2F05%2F29%2Fcss%E5%85%BC%E5%AE%B9%2F</url>
    <content type="text"><![CDATA[为什么需要兼容? 因为各个浏览器(如IE6-IE11,Firefox/Safari/Opera/Chrome等)的渲染内核不一样,对CSS的支持、解析不一样,导致在不同浏览器的环境中呈现出不一致的页面展现效果。 各浏览器兼容前缀-moz- Firefox-webkit- Chrome-o- Opera-ms- IE 标准写法（不带前缀的）必须放在最后，否则容易造成渲染出意外的结果。 css需要兼容的属性例如：12border-radiusbox-shadow HTML标签ul标签 在IE6/IE7,有外边距;而在IE8以上及其他浏览器有内边距;所以统一设置ul的内外边距为0 1,问题：块属性标签float后，又有横行的margin情况下，在ie6显示margin比设置的大解决方案：在float的标签样式控制中加入 display:inline;将其转化为行内属性。 2,设置较小高度标签（一般小于10px），在ie6，ie7，遨游中高度超出自己设置高度给超出高度的标签设置overflow:hidden;或者设置行高line-height 小于你设置的高度。]]></content>
  </entry>
  <entry>
    <title></title>
    <url>%2F2018%2F05%2F28%2Ftest02%2F</url>
    <content type="text"><![CDATA[Document * { margin: 0; padding: 0; } div.test { width: 375px; height: 160px; background-color: bisque; text-align: center; } .hello { color: red; } Hello Ben]]></content>
  </entry>
  <entry>
    <title></title>
    <url>%2F2018%2F05%2F28%2Fjquery-3.1.1.min%2F</url>
    <content type="text"><![CDATA[/*! jQuery v3.1.1 | (c) jQuery Foundation | jquery.org/license */ !function(a,b){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error("jQuery requires a window with a document");return b(a)}:b(a)}("undefined"!=typeof window?window:this,function(a,b){"use strict";var c=[],d=a.document,e=Object.getPrototypeOf,f=c.slice,g=c.concat,h=c.push,i=c.indexOf,j={},k=j.toString,l=j.hasOwnProperty,m=l.toString,n=m.call(Object),o={};function p(a,b){b=b||d;var c=b.createElement("script");c.text=a,b.head.appendChild(c).parentNode.removeChild(c)}var q="3.1.1",r=function(a,b){return new r.fn.init(a,b)},s=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,t=/^-ms-/,u=/-([a-z])/g,v=function(a,b){return b.toUpperCase()};r.fn=r.prototype={jquery:q,constructor:r,length:0,toArray:function(){return f.call(this)},get:function(a){return null==a?f.call(this):a=0&&c0&&b-1 in a)}var x=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u="sizzle"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&&(l=!0),0},C={}.hasOwnProperty,D=[],E=D.pop,F=D.push,G=D.push,H=D.slice,I=function(a,b){for(var c=0,d=a.length;c+~]|"+K+")"+K+"*"),S=new RegExp("="+K+"*([^\\]'\"]*?)"+K+"*\\]","g"),T=new RegExp(N),U=new RegExp("^"+L+"$"),V={ID:new RegExp("^#("+L+")"),CLASS:new RegExp("^\\.("+L+")"),TAG:new RegExp("^("+L+"|[*])"),ATTR:new RegExp("^"+M),PSEUDO:new RegExp("^"+N),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+K+"*(even|odd|(([+-]|)(\\d*)n|)"+K+"*(?:([+-]|)"+K+"*(\\d+)|))"+K+"*\\)|)","i"),bool:new RegExp("^(?:"+J+")$","i"),needsContext:new RegExp("^"+K+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+K+"*((?:-\\d)?\\d*)"+K+"*\\)|)(?=[^-]|$)","i")},W=/^(?:input|select|textarea|button)$/i,X=/^h\d$/i,Y=/^[^{]+\{\s*\[native \w/,Z=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,$=/[+~]/,_=new RegExp("\\\\([\\da-f]{1,6}"+K+"?|("+K+")|.)","ig"),aa=function(a,b,c){var d="0x"+b-65536;return d!==d||c?b:d>10|55296,1023&d|56320)},ba=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,ca=function(a,b){return b?"\0"===a?"\ufffd":a.slice(0,-1)+"\\"+a.charCodeAt(a.length-1).toString(16)+" ":"\\"+a},da=function(){m()},ea=ta(function(a){return a.disabled===!0&&("form"in a||"label"in a)},{dir:"parentNode",next:"legend"});try{G.apply(D=H.call(v.childNodes),v.childNodes),D[v.childNodes.length].nodeType}catch(fa){G={apply:D.length?function(a,b){F.apply(a,H.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ga(a,b,d,e){var f,h,j,k,l,o,r,s=b&&b.ownerDocument,w=b?b.nodeType:9;if(d=d||[],"string"!=typeof a||!a||1!==w&&9!==w&&11!==w)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==w&&(l=Z.exec(a)))if(f=l[1]){if(9===w){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(s&&(j=s.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(l[2])return G.apply(d,b.getElementsByTagName(a)),d;if((f=l[3])&&c.getElementsByClassName&&b.getElementsByClassName)return G.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+" "]&&(!q||!q.test(a))){if(1!==w)s=b,r=a;else if("object"!==b.nodeName.toLowerCase()){(k=b.getAttribute("id"))?k=k.replace(ba,ca):b.setAttribute("id",k=u),o=g(a),h=o.length;while(h--)o[h]="#"+k+" "+sa(o[h]);r=o.join(","),s=$.test(a)&&qa(b.parentNode)||b}if(r)try{return G.apply(d,s.querySelectorAll(r)),d}catch(x){}finally{k===u&&b.removeAttribute("id")}}}return i(a.replace(P,"$1"),b,d,e)}function ha(){var a=[];function b(c,e){return a.push(c+" ")>d.cacheLength&&delete b[a.shift()],b[c+" "]=e}return b}function ia(a){return a[u]=!0,a}function ja(a){var b=n.createElement("fieldset");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ka(a,b){var c=a.split("|"),e=c.length;while(e--)d.attrHandle[c[e]]=b}function la(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&a.sourceIndex-b.sourceIndex;if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return"input"===c&&b.type===a}}function na(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&&b.type===a}}function oa(a){return function(b){return"form"in b?b.parentNode&&b.disabled===!1?"label"in b?"label"in b.parentNode?b.parentNode.disabled===a:b.disabled===a:b.isDisabled===a||b.isDisabled!==!a&&ea(b)===a:b.disabled===a:"label"in b&&b.disabled===a}}function pa(a){return ia(function(b){return b=+b,ia(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function qa(a){return a&&"undefined"!=typeof a.getElementsByTagName&&a}c=ga.support={},f=ga.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return!!b&&"HTML"!==b.nodeName},m=ga.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=n.documentElement,p=!f(n),v!==n&&(e=n.defaultView)&&e.top!==e&&(e.addEventListener?e.addEventListener("unload",da,!1):e.attachEvent&&e.attachEvent("onunload",da)),c.attributes=ja(function(a){return a.className="i",!a.getAttribute("className")}),c.getElementsByTagName=ja(function(a){return a.appendChild(n.createComment("")),!a.getElementsByTagName("*").length}),c.getElementsByClassName=Y.test(n.getElementsByClassName),c.getById=ja(function(a){return o.appendChild(a).id=u,!n.getElementsByName||!n.getElementsByName(u).length}),c.getById?(d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){return a.getAttribute("id")===b}},d.find.ID=function(a,b){if("undefined"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c?[c]:[]}}):(d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){var c="undefined"!=typeof a.getAttributeNode&&a.getAttributeNode("id");return c&&c.value===b}},d.find.ID=function(a,b){if("undefined"!=typeof b.getElementById&&p){var c,d,e,f=b.getElementById(a);if(f){if(c=f.getAttributeNode("id"),c&&c.value===a)return[f];e=b.getElementsByName(a),d=0;while(f=e[d++])if(c=f.getAttributeNode("id"),c&&c.value===a)return[f]}return[]}}),d.find.TAG=c.getElementsByTagName?function(a,b){return"undefined"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){if("undefined"!=typeof b.getElementsByClassName&&p)return b.getElementsByClassName(a)},r=[],q=[],(c.qsa=Y.test(n.querySelectorAll))&&(ja(function(a){o.appendChild(a).innerHTML="",a.querySelectorAll("[msallowcapture^='']").length&&q.push("[*^$]="+K+"*(?:''|\"\")"),a.querySelectorAll("[selected]").length||q.push("\\["+K+"*(?:value|"+J+")"),a.querySelectorAll("[id~="+u+"-]").length||q.push("~="),a.querySelectorAll(":checked").length||q.push(":checked"),a.querySelectorAll("a#"+u+"+*").length||q.push(".#.+[+~]")}),ja(function(a){a.innerHTML="";var b=n.createElement("input");b.setAttribute("type","hidden"),a.appendChild(b).setAttribute("name","D"),a.querySelectorAll("[name=d]").length&&q.push("name"+K+"*[*^$|!~]?="),2!==a.querySelectorAll(":enabled").length&&q.push(":enabled",":disabled"),o.appendChild(a).disabled=!0,2!==a.querySelectorAll(":disabled").length&&q.push(":enabled",":disabled"),a.querySelectorAll("*,:x"),q.push(",.*:")})),(c.matchesSelector=Y.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ja(function(a){c.disconnectedMatch=s.call(a,"*"),s.call(a,"[s!='']:x"),r.push("!=",N)}),q=q.length&&new RegExp(q.join("|")),r=r.length&&new RegExp(r.join("|")),b=Y.test(o.compareDocumentPosition),t=b||Y.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===n||a.ownerDocument===v&&t(v,a)?-1:b===n||b.ownerDocument===v&&t(v,b)?1:k?I(k,a)-I(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,g=[a],h=[b];if(!e||!f)return a===n?-1:b===n?1:e?-1:f?1:k?I(k,a)-I(k,b):0;if(e===f)return la(a,b);c=a;while(c=c.parentNode)g.unshift(c);c=b;while(c=c.parentNode)h.unshift(c);while(g[d]===h[d])d++;return d?la(g[d],h[d]):g[d]===v?-1:h[d]===v?1:0},n):n},ga.matches=function(a,b){return ga(a,null,null,b)},ga.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(S,"='$1']"),c.matchesSelector&&p&&!A[b+" "]&&(!r||!r.test(b))&&(!q||!q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return ga(b,n,null,[a]).length>0},ga.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},ga.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&C.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},ga.escape=function(a){return(a+"").replace(ba,ca)},ga.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},ga.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ga.getText=function(a){var b,c="",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if("string"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ga.selectors={cacheLength:50,createPseudo:ia,match:V,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(_,aa),a[3]=(a[3]||a[4]||a[5]||"").replace(_,aa),"~="===a[2]&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),"nth"===a[1].slice(0,3)?(a[3]||ga.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&&ga.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return V.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||"":c&&T.test(c)&&(b=g(c,!0))&&(b=c.indexOf(")",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(_,aa).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+" "];return b||(b=new RegExp("(^|"+K+")"+a+"("+K+"|$)"))&&y(a,function(a){return b.test("string"==typeof a.className&&a.className||"undefined"!=typeof a.getAttribute&&a.getAttribute("class")||"")})},ATTR:function(a,b,c){return function(d){var e=ga.attr(d,a);return null==e?"!="===b:!b||(e+="","="===b?e===c:"!="===b?e!==c:"^="===b?c&&0===e.indexOf(c):"*="===b?c&&e.indexOf(c)>-1:"$="===b?c&&e.slice(-c.length)===c:"~="===b?(" "+e.replace(O," ")+" ").indexOf(c)>-1:"|="===b&&(e===c||e.slice(0,c.length+1)===c+"-"))}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?"nextSibling":"previousSibling",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h,t=!1;if(q){if(f){while(p){m=b;while(m=m[p])if(h?m.nodeName.toLowerCase()===r:1===m.nodeType)return!1;o=p="only"===a&&!o&&"nextSibling"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){m=q,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n&&j[2],m=n&&q.childNodes[n];while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if(1===m.nodeType&&++t&&m===b){k[a]=[w,n,t];break}}else if(s&&(m=b,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n),t===!1)while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if((h?m.nodeName.toLowerCase()===r:1===m.nodeType)&&++t&&(s&&(l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),k[a]=[w,t]),m===b))break;return t-=e,t===d||t%d===0&&t/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ga.error("unsupported pseudo: "+a);return e[u]?e(b):e.length>1?(c=[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=I(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(P,"$1"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length>0}}),contains:ia(function(a){return a=a.replace(_,aa),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ia(function(a){return U.test(a||"")||ga.error("unsupported lang: "+a),a=a.replace(_,aa).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+"-");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:oa(!1),disabled:oa(!0),checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&!!a.checked||"option"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType=0;)a.push(d);return a}),gt:pa(function(a,b,c){for(var d=c-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];i1&&sa(a.slice(0,i-1).concat({value:" "===a[i-2].type?"*":""})).replace(P,"$1"),c,i0)while(s--)t[s]||u[s]||(u[s]=E.call(i));u=wa(u)}G.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&ga.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ia(f):f}return h=ga.compile=function(a,b){var c,d=[],e=[],f=A[a+" "];if(!f){b||(b=g(a)),c=b.length;while(c--)f=ya(b[c]),f[u]?d.push(f):e.push(f);f=A(a,za(e,d)),f.selector=a}return f},i=ga.select=function(a,b,c,e){var f,i,j,k,l,m="function"==typeof a&&a,n=!e&&g(a=m.selector||a);if(c=c||[],1===n.length){if(i=n[0]=n[0].slice(0),i.length>2&&"ID"===(j=i[0]).type&&9===b.nodeType&&p&&d.relative[i[1].type]){if(b=(d.find.ID(j.matches[0].replace(_,aa),b)||[])[0],!b)return c;m&&(b=b.parentNode),a=a.slice(i.shift().value.length)}f=V.needsContext.test(a)?0:i.length;while(f--){if(j=i[f],d.relative[k=j.type])break;if((l=d.find[k])&&(e=l(j.matches[0].replace(_,aa),$.test(i[0].type)&&qa(b.parentNode)||b))){if(i.splice(f,1),a=e.length&&sa(i),!a)return G.apply(c,e),c;break}}}return(m||h(a,n))(e,b,!p,c,!b||$.test(a)&&qa(b.parentNode)||b),c},c.sortStable=u.split("").sort(B).join("")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ja(function(a){return 1&a.compareDocumentPosition(n.createElement("fieldset"))}),ja(function(a){return a.innerHTML="","#"===a.firstChild.getAttribute("href")})||ka("type|href|height|width",function(a,b,c){if(!c)return a.getAttribute(b,"type"===b.toLowerCase()?1:2)}),c.attributes&&ja(function(a){return a.innerHTML="",a.firstChild.setAttribute("value",""),""===a.firstChild.getAttribute("value")})||ka("value",function(a,b,c){if(!c&&"input"===a.nodeName.toLowerCase())return a.defaultValue}),ja(function(a){return null==a.getAttribute("disabled")})||ka(J,function(a,b,c){var d;if(!c)return a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),ga}(a);r.find=x,r.expr=x.selectors,r.expr[":"]=r.expr.pseudos,r.uniqueSort=r.unique=x.uniqueSort,r.text=x.getText,r.isXMLDoc=x.isXML,r.contains=x.contains,r.escapeSelector=x.escape;var y=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&r(a).is(c))break;d.push(a)}return d},z=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c},A=r.expr.match.needsContext,B=/^:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:|)$/i,C=/^.[^:#\[\.,]*$/;function D(a,b,c){return r.isFunction(b)?r.grep(a,function(a,d){return!!b.call(a,d,a)!==c}):b.nodeType?r.grep(a,function(a){return a===b!==c}):"string"!=typeof b?r.grep(a,function(a){return i.call(b,a)>-1!==c}):C.test(b)?r.filter(b,a,c):(b=r.filter(b,a),r.grep(a,function(a){return i.call(b,a)>-1!==c&&1===a.nodeType}))}r.filter=function(a,b,c){var d=b[0];return c&&(a=":not("+a+")"),1===b.length&&1===d.nodeType?r.find.matchesSelector(d,a)?[d]:[]:r.find.matches(a,r.grep(b,function(a){return 1===a.nodeType}))},r.fn.extend({find:function(a){var b,c,d=this.length,e=this;if("string"!=typeof a)return this.pushStack(r(a).filter(function(){for(b=0;b]*|#([\w-]+))$/,G=r.fn.init=function(a,b,c){var e,f;if(!a)return this;if(c=c||E,"string"==typeof a){if(e=""===a[a.length-1]&&a.length>=3?[null,a,null]:F.exec(a),!e||!e[1]&&b)return!b||b.jquery?(b||c).find(a):this.constructor(b).find(a);if(e[1]){if(b=b instanceof r?b[0]:b,r.merge(this,r.parseHTML(e[1],b&&b.nodeType?b.ownerDocument||b:d,!0)),B.test(e[1])&&r.isPlainObject(b))for(e in b)r.isFunction(this[e])?this[e](b[e]):this.attr(e,b[e]);return this}return f=d.getElementById(e[2]),f&&(this[0]=f,this.length=1),this}return a.nodeType?(this[0]=a,this.length=1,this):r.isFunction(a)?void 0!==c.ready?c.ready(a):a(r):r.makeArray(a,this)};G.prototype=r.fn,E=r(d);var H=/^(?:parents|prev(?:Until|All))/,I={children:!0,contents:!0,next:!0,prev:!0};r.fn.extend({has:function(a){var b=r(a,this),c=b.length;return this.filter(function(){for(var a=0;a1?r.uniqueSort(f):f)},index:function(a){return a?"string"==typeof a?i.call(r(a),this[0]):i.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(r.uniqueSort(r.merge(this.get(),r(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function J(a,b){while((a=a[b])&&1!==a.nodeType);return a}r.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return y(a,"parentNode")},parentsUntil:function(a,b,c){return y(a,"parentNode",c)},next:function(a){return J(a,"nextSibling")},prev:function(a){return J(a,"previousSibling")},nextAll:function(a){return y(a,"nextSibling")},prevAll:function(a){return y(a,"previousSibling")},nextUntil:function(a,b,c){return y(a,"nextSibling",c)},prevUntil:function(a,b,c){return y(a,"previousSibling",c)},siblings:function(a){return z((a.parentNode||{}).firstChild,a)},children:function(a){return z(a.firstChild)},contents:function(a){return a.contentDocument||r.merge([],a.childNodes)}},function(a,b){r.fn[a]=function(c,d){var e=r.map(this,b,c);return"Until"!==a.slice(-5)&&(d=c),d&&"string"==typeof d&&(e=r.filter(d,e)),this.length>1&&(I[a]||r.uniqueSort(e),H.test(a)&&e.reverse()),this.pushStack(e)}});var K=/[^\x20\t\r\n\f]+/g;function L(a){var b={};return r.each(a.match(K)||[],function(a,c){b[c]=!0}),b}r.Callbacks=function(a){a="string"==typeof a?L(a):r.extend({},a);var b,c,d,e,f=[],g=[],h=-1,i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h-1)f.splice(c,1),c-1:f.length>0},empty:function(){return f&&(f=[]),this},disable:function(){return e=g=[],f=c="",this},disabled:function(){return!f},lock:function(){return e=g=[],c||b||(f=c=""),this},locked:function(){return!!e},fireWith:function(a,c){return e||(c=c||[],c=[a,c.slice?c.slice():c],g.push(c),b||i()),this},fire:function(){return j.fireWith(this,arguments),this},fired:function(){return!!d}};return j};function M(a){return a}function N(a){throw a}function O(a,b,c){var d;try{a&&r.isFunction(d=a.promise)?d.call(a).done(b).fail(c):a&&r.isFunction(d=a.then)?d.call(a,b,c):b.call(void 0,a)}catch(a){c.call(void 0,a)}}r.extend({Deferred:function(b){var c=[["notify","progress",r.Callbacks("memory"),r.Callbacks("memory"),2],["resolve","done",r.Callbacks("once memory"),r.Callbacks("once memory"),0,"resolved"],["reject","fail",r.Callbacks("once memory"),r.Callbacks("once memory"),1,"rejected"]],d="pending",e={state:function(){return d},always:function(){return f.done(arguments).fail(arguments),this},"catch":function(a){return e.then(null,a)},pipe:function(){var a=arguments;return r.Deferred(function(b){r.each(c,function(c,d){var e=r.isFunction(a[d[4]])&&a[d[4]];f[d[1]](function(){var a=e&&e.apply(this,arguments);a&&r.isFunction(a.promise)?a.promise().progress(b.notify).done(b.resolve).fail(b.reject):b[d[0]+"With"](this,e?[a]:arguments)})}),a=null}).promise()},then:function(b,d,e){var f=0;function g(b,c,d,e){return function(){var h=this,i=arguments,j=function(){var a,j;if(!(b=f&&(d!==N&&(h=void 0,i=[a]),c.rejectWith(h,i))}};b?k():(r.Deferred.getStackHook&&(k.stackTrace=r.Deferred.getStackHook()),a.setTimeout(k))}}return r.Deferred(function(a){c[0][3].add(g(0,a,r.isFunction(e)?e:M,a.notifyWith)),c[1][3].add(g(0,a,r.isFunction(b)?b:M)),c[2][3].add(g(0,a,r.isFunction(d)?d:N))}).promise()},promise:function(a){return null!=a?r.extend(a,e):e}},f={};return r.each(c,function(a,b){var g=b[2],h=b[5];e[b[1]]=g.add,h&&g.add(function(){d=h},c[3-a][2].disable,c[0][2].lock),g.add(b[3].fire),f[b[0]]=function(){return f[b[0]+"With"](this===f?void 0:this,arguments),this},f[b[0]+"With"]=g.fireWith}),e.promise(f),b&&b.call(f,f),f},when:function(a){var b=arguments.length,c=b,d=Array(c),e=f.call(arguments),g=r.Deferred(),h=function(a){return function(c){d[a]=this,e[a]=arguments.length>1?f.call(arguments):c,--b||g.resolveWith(d,e)}};if(b0||Q.resolveWith(d,[r]))}}),r.ready.then=Q.then;function R(){d.removeEventListener("DOMContentLoaded",R), a.removeEventListener("load",R),r.ready()}"complete"===d.readyState||"loading"!==d.readyState&&!d.documentElement.doScroll?a.setTimeout(r.ready):(d.addEventListener("DOMContentLoaded",R),a.addEventListener("load",R));var S=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if("object"===r.type(c)){e=!0;for(h in c)S(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,r.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(r(a),c)})),b))for(;h1,null,!0)},removeData:function(a){return this.each(function(){W.remove(this,a)})}}),r.extend({queue:function(a,b,c){var d;if(a)return b=(b||"fx")+"queue",d=V.get(a,b),c&&(!d||r.isArray(c)?d=V.access(a,b,r.makeArray(c)):d.push(c)),d||[]},dequeue:function(a,b){b=b||"fx";var c=r.queue(a,b),d=c.length,e=c.shift(),f=r._queueHooks(a,b),g=function(){r.dequeue(a,b)};"inprogress"===e&&(e=c.shift(),d--),e&&("fx"===b&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return V.get(a,c)||V.access(a,c,{empty:r.Callbacks("once memory").add(function(){V.remove(a,[b+"queue",c])})})}}),r.fn.extend({queue:function(a,b){var c=2;return"string"!=typeof a&&(b=a,a="fx",c--),arguments.length\x20\t\r\n\f]+)/i,ka=/^$|\/(?:java|ecma)script/i,la={option:[1,"",""],thead:[1,"",""],col:[2,"",""],tr:[2,"",""],td:[3,"",""],_default:[0,"",""]};la.optgroup=la.option,la.tbody=la.tfoot=la.colgroup=la.caption=la.thead,la.th=la.td;function ma(a,b){var c;return c="undefined"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||"*"):"undefined"!=typeof a.querySelectorAll?a.querySelectorAll(b||"*"):[],void 0===b||b&&r.nodeName(a,b)?r.merge([a],c):c}function na(a,b){for(var c=0,d=a.length;c-1)e&&e.push(f);else if(j=r.contains(f.ownerDocument,f),g=ma(l.appendChild(f),"script"),j&&na(g),c){k=0;while(f=g[k++])ka.test(f.type||"")&&c.push(f)}return l}!function(){var a=d.createDocumentFragment(),b=a.appendChild(d.createElement("div")),c=d.createElement("input");c.setAttribute("type","radio"),c.setAttribute("checked","checked"),c.setAttribute("name","t"),b.appendChild(c),o.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML="x",o.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var qa=d.documentElement,ra=/^key/,sa=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,ta=/^([^.]*)(?:\.(.+)|)/;function ua(){return!0}function va(){return!1}function wa(){try{return d.activeElement}catch(a){}}function xa(a,b,c,d,e,f){var g,h;if("object"==typeof b){"string"!=typeof c&&(d=d||c,c=void 0);for(h in b)xa(a,h,c,d,b[h],f);return a}if(null==d&&null==e?(e=c,d=c=void 0):null==e&&("string"==typeof c?(e=d,d=void 0):(e=d,d=c,c=void 0)),e===!1)e=va;else if(!e)return a;return 1===f&&(g=e,e=function(a){return r().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=r.guid++)),a.each(function(){r.event.add(this,b,e,d,c)})}r.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=V.get(a);if(q){c.handler&&(f=c,c=f.handler,e=f.selector),e&&r.find.matchesSelector(qa,e),c.guid||(c.guid=r.guid++),(i=q.events)||(i=q.events={}),(g=q.handle)||(g=q.handle=function(b){return"undefined"!=typeof r&&r.event.triggered!==b.type?r.event.dispatch.apply(a,arguments):void 0}),b=(b||"").match(K)||[""],j=b.length;while(j--)h=ta.exec(b[j])||[],n=p=h[1],o=(h[2]||"").split(".").sort(),n&&(l=r.event.special[n]||{},n=(e?l.delegateType:l.bindType)||n,l=r.event.special[n]||{},k=r.extend({type:n,origType:p,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&r.expr.match.needsContext.test(e),namespace:o.join(".")},f),(m=i[n])||(m=i[n]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,o,g)!==!1||a.addEventListener&&a.addEventListener(n,g)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),r.event.global[n]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=V.hasData(a)&&V.get(a);if(q&&(i=q.events)){b=(b||"").match(K)||[""],j=b.length;while(j--)if(h=ta.exec(b[j])||[],n=p=h[1],o=(h[2]||"").split(".").sort(),n){l=r.event.special[n]||{},n=(d?l.delegateType:l.bindType)||n,m=i[n]||[],h=h[2]&&new RegExp("(^|\\.)"+o.join("\\.(?:.*\\.|)")+"(\\.|$)"),g=f=m.length;while(f--)k=m[f],!e&&p!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&("**"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,o,q.handle)!==!1||r.removeEvent(a,n,q.handle),delete i[n])}else for(n in i)r.event.remove(a,n+b[j],c,d,!0);r.isEmptyObject(i)&&V.remove(a,"handle events")}},dispatch:function(a){var b=r.event.fix(a),c,d,e,f,g,h,i=new Array(arguments.length),j=(V.get(this,"events")||{})[b.type]||[],k=r.event.special[b.type]||{};for(i[0]=b,c=1;c=1))for(;j!==this;j=j.parentNode||this)if(1===j.nodeType&&("click"!==a.type||j.disabled!==!0)){for(f=[],g={},c=0;c-1:r.find(e,this,null,[j]).length),g[e]&&f.push(d);f.length&&h.push({elem:j,handlers:f})}return j=this,i\x20\t\r\n\f]*)[^>]*)\/>/gi,za=/=200&&b-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),r.isFunction(b)&&(b=b.call(a,c,r.extend({},h))),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),"using"in b?b.using.call(a,m):l.css(m)}},r.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){r.offset.setOffset(this,a,b)});var b,c,d,e,f=this[0];if(f)return f.getClientRects().length?(d=f.getBoundingClientRect(),d.width||d.height?(e=f.ownerDocument,c=Sb(e),b=e.documentElement,{top:d.top+c.pageYOffset-b.clientTop,left:d.left+c.pageXOffset-b.clientLeft}):d):{top:0,left:0}},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return"fixed"===r.css(c,"position")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),r.nodeName(a[0],"html")||(d=a.offset()),d={top:d.top+r.css(a[0],"borderTopWidth",!0),left:d.left+r.css(a[0],"borderLeftWidth",!0)}),{top:b.top-d.top-r.css(c,"marginTop",!0),left:b.left-d.left-r.css(c,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent;while(a&&"static"===r.css(a,"position"))a=a.offsetParent;return a||qa})}}),r.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,b){var c="pageYOffset"===b;r.fn[a]=function(d){return S(this,function(a,d,e){var f=Sb(a);return void 0===e?f?f[b]:a[d]:void(f?f.scrollTo(c?f.pageXOffset:e,c?e:f.pageYOffset):a[d]=e)},a,d,arguments.length)}}),r.each(["top","left"],function(a,b){r.cssHooks[b]=Oa(o.pixelPosition,function(a,c){if(c)return c=Na(a,b),La.test(c)?r(a).position()[b]+"px":c})}),r.each({Height:"height",Width:"width"},function(a,b){r.each({padding:"inner"+a,content:b,"":"outer"+a},function(c,d){r.fn[d]=function(e,f){var g=arguments.length&&(c||"boolean"!=typeof e),h=c||(e===!0||f===!0?"margin":"border");return S(this,function(b,c,e){var f;return r.isWindow(b)?0===d.indexOf("outer")?b["inner"+a]:b.document.documentElement["client"+a]:9===b.nodeType?(f=b.documentElement,Math.max(b.body["scroll"+a],f["scroll"+a],b.body["offset"+a],f["offset"+a],f["client"+a])):void 0===e?r.css(b,c,h):r.style(b,c,e,h)},b,g?e:void 0,g)}})}),r.fn.extend({bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,"**"):this.off(b,a||"**",c)}}),r.parseJSON=JSON.parse,"function"==typeof define&&define.amd&&define("jquery",[],function(){return r});var Tb=a.jQuery,Ub=a.$;return r.noConflict=function(b){return a.$===r&&(a.$=Ub),b&&a.jQuery===r&&(a.jQuery=Tb),r},b||(a.jQuery=a.$=r),r});]]></content>
  </entry>
  <entry>
    <title><![CDATA[js闭包与原型]]></title>
    <url>%2F2018%2F05%2F28%2Fjs%E9%97%AD%E5%8C%85%E4%B8%8E%E5%8E%9F%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[闭包定义 函数可以使用函数之外定义的变量(闭包就是能够读取其他函数内部变量的函数),也就是说,定义在一个函数内部的函数。所以，在本质上，闭包是将函数内部和函数外部连接起来的桥梁。 闭包作用1、可以减少全局变量的对象，防止全局变量过去庞大，导致难以维护。2、防止可修改变量，因为内部的变量外部是无法访问的，并且也不可修改的。安全3、读取函数内部的变量，另一个就是让这些变量的值始终保持在内存中。 例如：1234567891011121,Javascript语言的特殊之处，就在于函数内部可以直接读取全局变量。var n = 10;function f()&#123; alert(n);&#125;f();//102.另一方面，在函数外部自然无法读取函数内的局部变量。function g()&#123; var a = 2;&#125;alter(a);//error 如何从外部读取函数内部的局部变量？例如：1234567891011121314151617181920212223242526272829303132333435363738394041424344//在函数内部，再定义一个函数,实现从外部读取函数内部的局部变量。function f1()&#123; var a = 100; function f2()&#123; var b = 20; alert(a); &#125; f2();&#125;f1();其他写法：（ function f1()&#123; var a = 100; function f2()&#123; var b = 20; alert(a); &#125; return f2;&#125;f1()();或者(var a = f1(); a();)）现象：函数f2就被包括在函数f1内部，这时f1内部的所有局部变量，对f2都是可见的。但是反过来就不行，f2内部的局部变量，对f1就是不可见的。这就是js特有的"链式作用域"结构。总结发现：子对象会一级一级地向上寻找所有父对象的变量。所以，父对象的所有变量，对子对象都是可见的，反之则不成立。//这里有一个“&lt;strong&gt;误区&lt;strong&gt;”：全局name和局部name不是代表同一个变量var name = "panjunjie";function getName()&#123; var name = "ben";&#125;getName();console.log(name);//penjunjie正确的做法：var name = "panjunjie";function getName()&#123; name = "ben"; (或者： var a ="ben"; name = a; )&#125;getName();console.log(name);//ben prototype原型定义：每个函数function都有一个prototype，即原型。每个对象都有一个proto，可成为隐式原型。 例如：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647function Fn()&#123;&#125;;console.log(Fn.prototype);等价于function Fn()&#123;&#125;;var fn = new Fn();console.log(fn.__proto__);Fn是一个函数，fn对象是从Fn函数new出来的，这样fn对象就可以调用Fn.prototype中的属性。所以fn.__proto__===Fn.prototype图解：..= new Object() | (o1,o2) --&gt; __proto__ --&gt; Object.prototype |》 | prototype constructor | 《| function Object()每个对象都有一个__proto__属性，指向创建该对象的函数的prototype。每个函数都有一个属性叫做prototype。这个prototype的属性值是一个对象（属性的集合，再次强调！），默认的只有一个叫做constructor的属性，指向这个函数本身。#上图中的“Object prototype”也是一个对象，它的__proto__指向哪里？图解：.. = new Foo() | (f1,f2) --&gt; __proto__ --&gt; Foo.prototype ------| |》 | | prototype constructor | | 《| | function Foo() | | __proto__ |..= new Object() |--------------- | 《| (o1,o2) --&gt; __proto__ --&gt; Object.prototype --&gt; __proto__ --&gt; null |》 | prototype constructor | 《| function Object()自定义函数的prototype本质上就是和 var obj = &#123;&#125; 是一样的，都是被Object创建，所以它的__proto__指向的就是Object.prototype。Object.prototype确实一个特例——它的__proto__指向的是null，切记切记！#函数也是一种对象，函数也有__proto__吗？有,函数也是被创建出来的,被Function创建的。总结：对象的__proto__指向的是创建它的函数的prototype。例如：自定义函数Foo.__proto__指向Function.prototype，Object.__proto__指向Function.prototype，Function.__proto__指向Function.prototype，是一个环形结构。 instanceof判断引用类型，是对象，数组，newinstanceof表示的就是一种继承关系，或者原型链的结构。 继承javascript中的继承是通过原型链来体现的。 例如：12345678910111213141516171819202122232425262728function Foo()&#123;&#125;var f1 = new Foo();f1.a = 10;Foo.prototype.a = 100;Foo.prototype.b = 200;console.log(f1.a);//10console.log(f1.b);//200#访问一个对象的属性时，先在基本属性中查找，如果没有，再沿着__proto__这条链向上找，这就是&lt;strong&gt;原型链&lt;/strong&gt;。#在实际应用中区分一个属性到底是基本的还是从原型中找到的var item;for(item in f1)&#123; if(f1.hasOwnProperty(item))&#123; console.log(item); &#125;&#125;hasOwnProperty()返回一个布尔值，判断对象是否包含特定的自身（非继承）属性。#f1的这个hasOwnProperty方法是从哪里来的？ f1本身没有，Foo.prototype中也没有，哪儿来的？对象的原型链是沿着__proto__这条线走的，因此在查找f1.hasOwnProperty属性时，就会顺着原型链一直查找到Object.prototype。由于所有的对象的原型链都会找到Object.prototype，因此所有的对象都会有Object.prototype的方法。这就是所谓的“继承”。#每个函数都有call，apply方法，都有length，arguments，caller等属性。为什么每个函数都有？这肯定是“继承”的。函数由Function函数创建，因此继承的Function.prototype中的方法。#那怎么还有hasOwnProperty呢？那是Function.prototype继承自Object.prototype的方法。Function.prototype.__proto__是否指向Object.prototype。 原型的灵活性对象或者函数，刚开始new出来之后，可能啥属性都没有。但是你可以这会儿加一个，过一会儿在加两个，非常灵活。 执行上下文(也叫执行上下文环境)例如：12345678910111213141516171819202122232425262728293031console.log(a);//errorconsole.log(a);//undefinedvar a;console.log(a);//undefinedvar a = 10;(其实就是变量名的提升)#通过现象,得出结论：在一段js代码拿过来真正一句一句运行之前，浏览器已经做了一些“准备工作”，其中就包括对变量的声明，而不是赋值。变量赋值是在赋值语句执行的时候进行的。图解：第一种：console.log(a); ---&gt; var a;//声明 默认值是undefined "准备工作"var a = 10; ---&gt; console.log(a); "语句执行" a=10;//赋值 第二种：console.log(this); ---&gt; 此种情况直接给this赋值,这也是“准备工作”情况要做的事情之一。第三种：console.log(f1);//function f1()&#123;&#125;function f1()&#123;&#125;//函数声明console.log(f2);//undefinedvar f2 = function()&#123;&#125;;//函数表达式#总结一下，在“准备工作”中完成了哪些工作：1,变量、函数表达式——变量声明，默认赋值为undefined；2,this——赋值；3,函数声明——赋值；&lt;strong&gt;这三种数据的准备情况我们称之为“执行上下文”或者“执行上下文环境”。&lt;/strong&gt; “代码段”其实分三种情况——全局代码，函数体，eval代码。全局代码：代码在标签里函数体：function fn(x){} 1,函数每被调用一次，都会产生一个新的执行上下文环境。2,函数在定义的时候（不是调用的时候），就已经确定了函数体内部自由变量的作用域。 总结：上下文环境的数据在全局代码下：1,普通变量,函数表达式 声明2,this 赋值3,函数声明 赋值在函数体：1,参数 赋值2,arguments 赋值3,自由变量的取值作用域 赋值在执行代码之前，把将要用到的所有的变量都事先拿出来，有的直接赋值了，有的先用undefined占个空。 执行上下文栈1,执行全局代码时，会产生一个执行上下文环境，每次调用函数都又会产生执行上下文环境。当函数调用完成时，这个上下文环境以及其中的数据都会被消除，再重新回到全局上下文环境。处于活动状态的执行上下文环境只有一个。图解： 函数上下文环境全局上下文环境 –压栈—&gt; –出栈(销毁)—&gt; 全局上下文环境 全局上下文环境 例如：123456789101112131415var a = 10, fn, bar = function(x)&#123; var b = 5; fn(x+b); &#125;;fn = function(y)&#123; var c = 5; console.log(y+c);&#125;bar(10);代码执行过程：全局-上下文环境--&gt;bar-上下文环境--&gt;fn-上下文环境--&gt;bar-上下文环境--&gt;全局-上下文环境]]></content>
  </entry>
  <entry>
    <title><![CDATA[css3新特性]]></title>
    <url>%2F2018%2F05%2F28%2Fcss3%E6%96%B0%E7%89%B9%E6%80%A7%2F</url>
    <content type="text"><![CDATA[特别说明：支持表示属性可以在浏览器上显示出效果，不管是否通过添加前缀来实现的；而不支持就是无论怎么兼容也不会有效果。 1,边框(需要兼容) border-radius 圆角边框[IE9+以上支持，其他全支持]box-shadow 边框阴影[IE9+以上支持，其他全支持]border-image 边框图片[IE不支持，-weikit-,-o-] 2,背景[IE9+其他全支持]background-clip 确定背景画区 属性：1234border-box 背景从border开始显示padding-box 背景从padding开始显示content-box 背景从content区域开始显示no-cli 默认 background-origin 属性：123border-box 从border开始计算background-positionpadding-box 从padding开始计算background-positioncontent-box 从content开始计算background-position background-size 调整背景图片的大小 属性：1234contain 缩小图片以适合元素(维持像素长宽比)cover 扩展元素以填补元素100px 100px 缩小图片至指定的大小50% 100% 缩小图片至指定的大小,百分比是相对包含元素的尺寸 background-break 控制背景怎样在这些不同的盒子中显示 属性：123continuous 默认bounding-box 把盒之间的距离计算在内each-box 为每个盒子单独重绘背景 3,文本效果word-warp 强制文本进行换行，即这意味着会对单词进行拆分 属性：1break-word text-overflow 设置或检索当当前行超过指定容器的边界时如何显示 属性：12clip 修剪文本ellipsis 显示省略号代表修剪文本 text-shadow 向文本应用阴影[IE10+其他全支持] 属性：1234水平阴影、垂直阴影、模糊距离，以及阴影的颜色h1&#123; text-shadow: 5px 5px 5px #ff0000;&#125; text-decoration 对文字的更深层次的渲染 属性：123text-fill-color 设置文字内部填充颜色text-stroke-color 设置文字边界填充颜色text-stroke-width 设置文字边界宽度 4,渐变linear-gradient 线性渐变 radial-gradient 径向渐变 5,@font-face特性6,多列布局(需要兼容)[IE10+其他全支持,-moz-、-webkit-]属性：1234567891011121314151617181920212223242526272829303132333435363738column-count 规定元素应该被分隔的列数-moz-column-count: 3;-webkit-column-count: 3;column-count: 3;column-gap 规定列之间的间隔-moz-column-gap: 40px;-webkit-column-gap: 40px;column-gap: 40px; column-rule 设置列之间的宽度、样式和颜色规则-moz-column-rule: 3px outset #ff0000;-webkit-column-rule: 3px outset #ff0000;column-rule: 3px outset #ff0000; .newspaper&#123; -moz-column-count: 3; -webkit-column-count: 3; column-count: 3; -moz-column-gap: 100px; -webkit-column-gap: 100px column-gap: 100px; -moz-column-rule: 1px outset #000; -webkit-column-rule: 1px outset #000; column-rule: 1px outset #000;&#125;&lt;div class="newspaper"&gt; 人民网北京2月24日电 (记者 刘阳)国家发展改革委近日发出通知，决定自2月25日零时起将汽、柴油价格每吨分别提高300元和290元，折算到90号汽油和0号柴油（全国平均）每升零售价格分别提高0.22元和0.25元。 此次国内成品油价格调整幅度，是按照现行国内成品油价格形成机制，根据国际市场油价变化情况确定的。去年11月16日国内成品油价格调整以来，受市场预期欧美经济复苏前景向好以及中东局势持续动荡等因素影响，国际市场原油价格先抑后扬，2月上旬WTI和布伦特原油期货价格再次回升至每桶95美元和115美元以上。虽然近两日价格有所回落，但国内油价挂钩的国际市场三种原油连续22个工作日移动平均价格上涨幅度已超过4%，达到国内成品油价格调整的边界条件。 通知指出，这次成品油调价后，国家将按照已建立的补贴机制，继续对种粮农民、渔业（含远洋渔业）、林业、城市公交、农村道路客运（含岛际和农村水路客运）等给予补贴。同时，为保证市场物价基本稳定，防止连锁涨价，对与居民生活密切相关的铁路客运、城市公交、农村道路客运（含岛际和农村水路客运）价格不作调整。 通知要求，中石油、中石化、中海油三大公司要组织好成品油生产和调运，保持合理库存，加强综合协调和应急调度，保障成品油供应。各级价格主管部门要加大市场监督检查力度，依法查处不执行国家价格政策，以及囤积居奇、造谣惑众、合谋涨价、搭车涨价等违法行为，维护正常市场秩序。&lt;/div&gt; 7,用户界面(需要兼容)新的用户界面特性包括重设元素尺寸、盒尺寸以及轮廓等 resize 规定是否可由用户调整元素尺寸(需要与overflow搭配才生效)[FF、Chrome、Safari 支持] 属性：1234567891011resize: both;/* none|both|horizontal|vertical*/overflow: auto;等于可以缩放div div&#123; border: 2px solid; padding: 10px 40px; width: 300px; resize: both; overflow: auto;&#125; box-sizing [全支持,ff需要-moz-] 属性：12content-box (Element width = width + border + padding),此属性表现为标准模式下的盒模型。border-box (Element width = width)，此属性表现为怪异模式下的盒模型 outline-offset 对轮廓进行偏移，并在超出边框边缘的位置绘制轮廓[除IE全支持] 例如：12345678div&#123; width: 40px; height: 70px; border: 2px solid #000; outline: 2px solid #00ffff; outline-offset: 15px;&#125;等于把边框扩展了 8,过渡[IE10+其他全支持,-webkit-]transition 在当元素从一种样式变换为另一种样式时为元素添加效果[全不支持] 属性：12345678910111213transition-property 规定应用过渡的CSS属性的名称transition-duration 规定完成过渡效果需要多长时间transition-delay 规定过渡效果何时开始，默认是0transition-timing-function 规定过渡效果的时间曲线/* 默认ease|linear|ease-in|ease-out|ease-in-out|cubic-bezier*/简写transition: width 1s linear 2s;div&#123; transition: width 2s; -moz-transition: width 2s; -webkit-transition: width 2s; -o-transition: width 2s;&#125; 9,2D/3D转换[IE10+其他全支持,-webkit-,IE9-ms-]transform 向元素应用各种2D和3D转换,对元素进行旋转、缩放、移动或倾斜等操作[IE10+,ff,o支持|IE9-ms-,chrome,safari-webkit-|o只支持2D] 属性123456789101112131415161718192021222324252627282930translate() 位移translate(x,y)rotate() 旋转rotate(deg)scale() 缩放scale(x,y)skew() 翻转skew(x,y)matrix() 把所有 2D 转换方法组合在一起 matrix3d(n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n) 定义3D转换，使用16个值的4x4矩阵 定义2D位移转换translate3d(x,y,z) 定义3D位移转换translateX(x) 定义位移转换，只是用X轴的值translateY(y) 定义位移转换，只是用Y轴的值translateZ(z) 定义3D位移转换，只是用Z轴的值scale(x,y) 定义2D缩放转换scale3d(x,y,z) 定义3D缩放转换scaleX(x)scaleY(y)scaleZ(z)rotate(angle) 定义2D旋转，在参数中规定角度rotate3d(x,y,z,angle) 定义3D旋转 rotateX(angle) 定义沿着X轴的3D旋转rotateY(angle)rotateZ(angle)skew(x-angle,y-angle) 定义沿着X和Y轴的2D倾斜转换skewX()skewY()perspective(n) 为3D转换元素定义透视视图 10,动画[IE10+其他全支持,-webkit-]动画是使元素从一种样式逐渐变化为另一种样式的效果。0% 是动画的开始，100% 是动画的完成。@keyframes 规则关键词 “from” 和 “to”，等同于 0% 和 100% 例如：12345678910111213141516171819202122232425262728div &#123; width: 100px; height: 100px; background: red; -moz-animation: myfirst 5s; -webkit-animation: myfirst 5s; -o-animation: myfirst 5s; animation: myfirst 5s; &#125; @-moz-keyframes myfirst&#123; from&#123;backgrount: red;&#125; to&#123;background: yellow;&#125; &#125; @-webkit-keyframes myfirst&#123; from&#123;backgrount: red;&#125; to&#123;background: yellow;&#125; &#125; @-o-keyframes myfirst&#123; from&#123;backgrount: red;&#125; to&#123;background: yellow;&#125; &#125; @keyframes myfirst &#123; from&#123;backgrount: red;&#125; to&#123;background: yellow;&#125; &#125; &lt;div&gt;&lt;/div&gt; 11,选择器]]></content>
  </entry>
  <entry>
    <title><![CDATA[css选择器]]></title>
    <url>%2F2018%2F05%2F26%2Fcss%E9%80%89%E6%8B%A9%E5%99%A8%2F</url>
    <content type="text"><![CDATA[选择器 无非分两种：1,标签选择器（*是特殊情况），可但标签，也可上下文多标签；2,属性选择器（id和class都是属性，特殊的属性）； 标签选择器1,多标签 例如：123456789101112div p&#123;&#125;选择一个祖先的所有子孙节点div &gt; p&#123;&#125;选择一个父元素的所有直属节点li + li&#123;&#125;选择某一个元素紧挨着的兄弟节点span ~ a&#123;&#125;选择某一个元素的所有同胞节点运用给菜单栏之间加下划线，以前的做法(给所用的li设，在指定最后的去掉)新用法：ul li+li&#123; border-top: 1px solid blue; &#125; 属性选择器css选择器是根据html节点的特性来设置的 两种方式：12img[title]&#123;&#125;只通过属性名选择input[type="button"]&#123;&#125;通过属性名和属性值选择]]></content>
  </entry>
  <entry>
    <title><![CDATA[css样式来源和层叠机制]]></title>
    <url>%2F2018%2F05%2F26%2Fcss%E6%A0%B7%E5%BC%8F%E6%9D%A5%E6%BA%90%E5%92%8C%E5%B1%82%E5%8F%A0%E6%9C%BA%E5%88%B6%2F</url>
    <content type="text"><![CDATA[1,“层叠”的概念 层叠是CSS的核心机制 例如：1234567891011121314151617181920212223242526272829&lt;link rel="stylesheet" type="text/css" href="css/css1.css"&gt;&lt;style&gt; p&#123; color: blue; &#125; span&#123; color: blue; &#125;&lt;/style&gt;&lt;body&gt; &lt;p&gt;这是一个p&lt;/p&gt; &lt;span&gt;这是一个span&lt;/span&gt;&lt;/body&gt;css1.css&#123; p&#123; color: red; font-weight: bold; &#125; span&#123; color: red !important; &#125;&#125;最后显示的效果：p blue span red 知识点：!important!important为开发者提供了一个增加样式权重的方法。应当注意的是!important是对整条样式的声明，包括这个样式的属性和属性值。新写法：span{color: red !important;color :blue;} 2,层叠的规则覆盖的默认规则是后者覆盖前者，但是又一个特殊情况——!important。]]></content>
  </entry>
  <entry>
    <title><![CDATA[浏览器默认样式]]></title>
    <url>%2F2018%2F05%2F26%2F%E6%B5%8F%E8%A7%88%E5%99%A8%E9%BB%98%E8%AE%A4%E6%A0%B7%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[1,理念上的转变 浏览器加载了html之后只为一件东西——dom树，浏览器把html变为dom树结构，就完成了对html的结构化。至于后来对视图的渲染，p是block、br换行，那是整合了css之后的事情。而浏览器整合css又是另一个路线，和解析html是分开的。这里的“css”就包含了浏览器默认样式。 一句话，浏览器将载入的html变为dom树，但是此时没有任何显示样式。所以显示的样式，都是css定义的，浏览器只会通过css来渲染视图样式。 2,block元素有：html,address, blockquote, body,dd,div, dl,dt,fieldset,form, frame,frameset, h1-h6, noframes, ol,p,ul,center, dir,hr,menu,pre没有设置block的元素，默认为inline显示。 不要再说div天生就是block——这句话应该换成：浏览器默认样式天生规定了div是block——所以才导致了div是block。是默认样式规定的，不是浏览器的内核规定的。 3,display: list-item例如：12345 &lt;div style="border: 1px solid #f0f0f0;padding: 5px"&gt; &lt;span style="display: list-item;"&gt;100&lt;/span&gt; &lt;span style="display: list-item"&gt;200&lt;/span&gt; &lt;span style="display: list-item"&gt;300&lt;/span&gt;&lt;/div&gt; ul-li为什么会默认显示成那种样子？——list-item才是“罪魁祸首”。 4,diplay:table和在容器尺寸上最大区别是什么（只是容器尺寸，不考虑内容区别）？div宽度和父容器相同，table宽度根据内容而定 5,display: table-cell多列布局,传统模式下大家都使用float来解决这一问题，但是float写出来的东西代码复杂，宽度调整不灵活，浏览器兼容性有问题。所以才有了新方案——table-cell，注意，IE6、7不行！ 6,body样式默认body{margin:8px;line-height:1.12}这里的line-height: 1.12是一个相对值，即是文字高度的1.12倍。 7,em和pxem是一个浏览器识别的长度单位，但是它不是绝对的、固定的，而是相对的。浏览器默认情况下令1em === 16px。 px是一个绝对的长度单位制，它永远不会改变。 8,粗体和斜体默认：123456789h5&#123;font-size: 0.83em;margin: 1.5em 0;&#125;h6&#123;font-size: 0.75em;margin: 1.67em 0;&#125;h1,h2,h3,h4,h5,h6,bstrong&#123;font-weight: bolder&#125;blockquote&#123;margin-left:40px;margin-right: 40px;&#125;i,cite,em,var,address&#123;font-style: italic&#125; 和有啥区别？为了加粗而加粗(被css(font-weight:bold;)取代了)，为了标明重点而加粗(更加偏向于语义化)。 和有啥区别？单纯斜体,偏强调,斜体，强调内容,(现在更多的流行用来放图标，没有实际意义搜索引擎更好抓取) 9,inline-block默认：1button,textarea,input,object,select&#123;display:inline-block;&#125;]]></content>
  </entry>
  <entry>
    <title><![CDATA[css-Float]]></title>
    <url>%2F2018%2F05%2F26%2Fcss(float)%2F</url>
    <content type="text"><![CDATA[误解和“误用” 绝大多数用float都是为了——横向排版、或者多列布局。这样使用确实是对float的一种误解和“误用”，因为float被设计出来的初衷是用于——文字环绕效果。 破坏性float的“破坏性”——float破坏了父标签的原本结构，使得父标签出现了坍塌现象。导致这一现象的最根本原因在于：被设置了float的元素会脱离文档流。(通俗点就是被设置的元素不占空间了) 解决方法1234567div:after&#123; content:""; height:0; display:block; clear:both; visibility:hidden;&#125; 例如：1234567&lt;div style="border:1px solid blue;padding:5px;"&gt; &lt;img src="img.png"/&gt;&lt;/div&gt;对比 &lt;div style="border:1px solid blue;padding:5px"&gt; &lt;img src="img.png" style="float:left;"/&gt;&lt;/div&gt; 包裹性清空格为什么float适合用于网页排版（俗称“砌砖头”）？就是因为float排版出来的网页严丝合缝，中间连个苍蝇都飞不进去。 “清空格”这一特性的根本原因是由于float会导致节点脱离文档流结构。它都不属于文档流结构了，那么它身边的什么换行、空格就都和它没关系的，它就尽量的往一边去靠拢，能靠多近就靠多近，这就是清空格的本质。 解决float一系列问题清除float先介绍两个比较简单，但是不常用的解决方法： 1,为父元素添加overflow:hidden2,浮动父元素 3,第三种方法也不是很常用,clear:both,通过在所有浮动元素下方添加一个clear:both的元素，可以消除float的破坏性。(如：在浮动元素下加上,俗称骨灰级解决方法) 缺陷：改变了HTML结构 4,第四种方法是大家最需要掌握的,也是我推荐的，也是bootstrap正在用的——clearfix用法：定义一个.clearfix类，然后对float元素的父元素应用这一样式即可 12345678910.clearfix:after&#123; content:&apos;.&apos;; height:0; display:block; clear:both; visibility:hidden;&#125;.clearfix&#123; *zoom:1;//兼容IE低版本 &#125; 合理的使用float布局网页float做网页布局也是有许多技巧的，准确的应用会提高网页的灵活性。 1,三列布局三列布局(很明显的左、中、右) 布局方案1234567891011&lt;div class="clearfix" style="text-align:center;"&gt; &lt;div style="float:left;"&gt; 左侧内容(宽度可以不设置，因为float具有包裹性) &lt;/div&gt; &lt;div style="float:right;"&gt; 右侧内容(宽度可以不设置，因为float具有包裹性) &lt;/div&gt; &lt;div&gt; 中间内容(当页面宽度发生变化时,中间内容宽度会随之调整) &lt;/div&gt;&lt;/div&gt; 2,两列布局两列布局(分为左、右结构) 布局方案123456&lt;div style="float:left;"&gt; 左侧内容(宽度可以不设置，因为float具有包裹性)&lt;/div&gt;&lt;div style="margin-left:100px;"&gt; 右侧内容&lt;/div&gt; 3,BootStrap的栅格系统]]></content>
  </entry>
  <entry>
    <title><![CDATA[css-Display]]></title>
    <url>%2F2018%2F05%2F26%2Fcss(display)%2F</url>
    <content type="text"><![CDATA[网页的所有元素，除了“块”就是“流”，而且“流”都是包含在“块”里面的（最外层的body就是一个“块”）。 常用的属性有：none、block、inline、inline-block、inherit，其中inherit是继承父元素的样式。 特殊：list-item：通过它可以模拟li列表样式；table：也是一个“块”，但和block相比，table具有包裹性；table-cell：最新的多列布局解决方案； 包裹性：12345包裹性：元素的宽度会收缩到与内容宽度一致。拥有包裹性的元素：float浮动的元素position为absolute或fixed的元素display为inline-block, table-cell, table-caption, inline-flex的元素 1,inlineinline的标签，你设置宽度和高度是无效的 如何把inline元素转换成“块”元素？12341,一般想到的都是设置display:block;2,也可以display:table3,设置float浮动元素4,设置absolute/fixed 2,block一个元素设置了block，它就必须遵循盒子模型的规则。 3,inline-block外部看来是“流”，但是自身确实一个“块”。]]></content>
  </entry>
  <entry>
    <title><![CDATA[css盒子模型]]></title>
    <url>%2F2018%2F05%2F25%2Fcss%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[1,什么是盒子模型 一种思维模型,内容(content)、填充(padding)、边框(border)、边界(margin)CSS盒子模式都具备这些属性。 2,盒子的宽度整个盒子的宽度是：（内容宽度 + border宽度 + padding宽度 + margin宽度）之和。设置的宽度都是内容宽度，不是整个盒子的宽度。 3,盒子模型设置宽度例如：1234567891011121314151617&lt;div style="padding:10px;border:1px solid blue;margin:10px;width:300px;box-sizing:border-box;"&gt; 随便写点东西，装修盒子。&lt;/div&gt;这是内容的宽度等于contant=300-width-border*2-padding*2;(标准模式)而盒子的宽度等于 300(怪异模式)盒子模型的两种模式:1,标准模式 盒子总宽度/高度=width/height+padding+border+margin2,怪异模式 盒子总宽度/高度=width/height + margin = (内容区宽度/高度 + padding + border) + margin用编辑器新建一个html页面的时候你一定会发现最顶上都会有一个DOCTYPE标签以上几种DOCTYPE(个人百度查找)都是标准的文档类型，无论使用哪种模式完整定义DOCTYPE，都会触发标准模式，而如果DOCTYPE缺失则在ie6，ie7，ie8下将会触发怪异模式（quirks 模式）。box-sizing 有两个值：content-box 将采用标准模式解析计算，也是默认模式；border-box 将采用怪异模式解析计算； 建议以后写样式：*{ margin: 0; padding: 0; box-sizing: border-box;} 4,纵向margin的重叠纵向的margin是会重叠的，大的会把小的“吃掉” 5,用div画“三角”例如：1234567div&#123; border: 10px solid; border-color: #333 transparent transparent transparent; width: 0;&#125;&lt;div&gt;&lt;/div&gt;]]></content>
  </entry>
  <entry>
    <title><![CDATA[js object的属性获取方式]]></title>
    <url>%2F2018%2F05%2F24%2Fjs%20object%E5%B1%9E%E6%80%A7%E8%8E%B7%E5%8F%96%E6%96%B9%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[方式 点object.name 括号object[“name”] 区别中括号法可以用变量作为属性名,而点方法不可以;中括号法可以用数字作为属性名,而点语法不可以;中括号法可以使用js的关键字和保留字作为属性名,而点语法不可以。]]></content>
  </entry>
  <entry>
    <title><![CDATA[css水平居中]]></title>
    <url>%2F2018%2F05%2F24%2Fcss%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD%2F</url>
    <content type="text"><![CDATA[css水平居中 1,margin+width定义一个宽度，然后配合margin的左右值为’auto’ 优点：实现方法简单易懂，浏览器兼容性强； 缺点：扩展性差，无法自适应未知项情况。 2,inline-block要在元素的父容器中设置text-align的属性为“center”,然后在设置inline-block 优点：简单易懂，扩展性强； 缺点：需要额外处理inline-block的浏览器兼容性。 3,浮动优点：兼容性强，扩展性强； 缺点：实现原理较复杂。 4,绝对定位优点：扩展性强，兼容性强; 缺点：理解性难。 5,CSS3的flex 6,CSS3的fit-content]]></content>
  </entry>
  <entry>
    <title><![CDATA[css知多少]]></title>
    <url>%2F2018%2F05%2F24%2Fcss%E7%9F%A5%E5%A4%9A%E5%B0%91%2F</url>
    <content type="text"><![CDATA[问题 1,有些浏览器不完全支持css3，现在可以用哪个工具去检测浏览器是否支持，以及支持哪些项？ 解答：1234modernizr modernizr是一个 JavaScript 库，用于检测用户浏览器的 HTML5 与 CSS3 特性。工作原理：Modernizr 会在页面加载后立即检测特性；然后创建一个包含检测结果的 JavaScript 对象，同时在 html 元素加入方便你调整 CSS 的 class 名。 2,是否用过@import？ 解答：1234567引入CSS的方法有两种，一种是@import，一种是link @import url('地址');&lt;link href="地址" rel="stylesheet" type="text/css"/&gt;现在绝大部分的网站都采用后一种link方式，原因在于@import先加载HTML，后加载CSSlink先加载CSS，后加载HTML。所以前者加载网页会出现令浏览者以外的格式，后者则是带格式的加载网页。 3,display的block\inline\inline-block的区别 解答：1234567block 块级元素,自带换行符 可以设置宽高、margin、padding block元素宽度自动填满其父元素宽度,即使设置了宽,仍然会独占一行inline 行内元素,多个会自动排列一行 设置宽高无效 margin、padding水平方向有效，垂直方向无效inline-block 有宽高的水平排列 4,是否用过inline-block，IE6、7如何兼容？ 解答：1234567两种方法：1、先使用display:inline-block属性触发块元素，然后再定义display:inline，让块元素呈递为内联对象（两个display 要先后放在两个CSS声明中才有效果，这是IE的一个经典bug，如果先定义了display:inline-block，然后再将display设回 inline或block，layout不会消失）div01&#123;display:inline-block;&#125;div02&#123;display:inline-block;&#125;div01,div02&#123;*display:inline;&#125;2、直接让块元素设置为内联对象呈递（设置属性display:inline），然后触发块元素的layoutdiv&#123;display:inline-block;_zoom:1;*display:inline;&#125;]]></content>
  </entry>
  <entry>
    <title><![CDATA[正则表达式]]></title>
    <url>%2F2018%2F05%2F23%2F%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[正则表达式(Regular Expression)是一种文本模式，包括普通字符（例如，a 到 z 之间的字母）和特殊字符（称为”元字符”）。 例如1234^[0-9]+abc$^ 为匹配输入字符串的开始位置[0-9]+匹配多个数字， [0-9] 匹配单个数字，+ 匹配一个或者多个。abc$匹配字母 abc 并以 abc 结尾，$ 为匹配输入字符串的结束位置。 普通字符普通字符包括没有显式指定为元字符的所有可打印和不可打印字符。这包括所有大写和小写字母、所有数字、所有标点符号和一些其他符号。 特殊字符例如1234567891011$ 匹配输入字符串的结尾位置。() 标记一个子表达式的开始和结束位置。* 匹配前面的子表达式零次或多次。+ 匹配前面的子表达式一次或多次。. 匹配除换行符 \n 之外的任何单字符。[ 标记一个中括号表达式的开始。? 匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。\ 将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。^ 匹配输入字符串的开始位置，除非在方括号表达式中使用，此时它表示不接受该字符集合。&#123; 标记限定符表达式的开始。| 指明两项之间的一个选择。]]></content>
  </entry>
  <entry>
    <title><![CDATA[window.location对象]]></title>
    <url>%2F2018%2F05%2F22%2Fes5(05)%2F</url>
    <content type="text"><![CDATA[属性 hash 从井号(#)开始host 主机名和当前URL的端口号hostname 当前URL的主机名href 完整的URLpathname 当前URL路径部分port 当前URL的端口号protocol 当前URL的协议search 从问号(?)开始的URL]]></content>
  </entry>
  <entry>
    <title><![CDATA[addClass和removeClass区别(jq)]]></title>
    <url>%2F2018%2F05%2F22%2Fjq(addClass%26removeClass)%2F</url>
    <content type="text"><![CDATA[addClass(class|fn) 为每个匹配的元素添加指定的类名。 参数class(类型string) 一个或多个要添加到元素中的CSS类名，请用空格分开function(index, class)(类型function) 此函数必须返回一个或多个空格分隔的class名。接受两个参数，index参数为对象在这个集合中的索引值，class参数为这个对象原先的class属性值。 例如：12345$('p').addClass('selected');$('p').addClass('selected selected');$('p').addClass(function()&#123; return 'item' +$(this).index();&#125;); removeClass(class|fn)从所有匹配的元素中删除全部或者指定的类。]]></content>
  </entry>
  <entry>
    <title></title>
    <url>%2F2018%2F05%2F22%2Ftest%2F</url>
    <content type="text"><![CDATA[Document body { font-family: Verdana, sans-serif; margin: 0; } * { box-sizing: border-box; } .row>.column { padding: 0 8px; } .row:after { content: ""; display: table; clear: both; } .column { float: left; width: 25%; } /* 弹窗背景 */ .modal { display: none; position: fixed; z-index: 1; padding-top: 100px; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: black; } /* 弹窗内容 */ .modal-content { position: relative; background-color: #fefefe; margin: auto; padding: 0; width: 90%; max-width: 1200px; } /* 关闭按钮 */ .close { color: white; position: absolute; top: 10px; right: 25px; font-size: 35px; font-weight: bold; } .close:hover, .close:focus { color: #999; text-decoration: none; cursor: pointer; } .mySlides { display: none; } .cursor { cursor: pointer } /* 上一页 & 下一页 按钮 */ .prev, .next { cursor: pointer; position: absolute; top: 50%; width: auto; padding: 16px; margin-top: -50px; color: white; font-weight: bold; font-size: 20px; transition: 0.6s ease; border-radius: 0 3px 3px 0; user-select: none; -webkit-user-select: none; } /* 定位下一页按钮到右侧 */ .next { right: 0; border-radius: 3px 0 0 3px; } /* 鼠标移动上去修改背景色为黑色 */ .prev:hover, .next:hover { background-color: rgba(0, 0, 0, 0.8); } /* 页数(1/3 etc) */ .numbertext { color: #f2f2f2; font-size: 12px; padding: 8px 12px; position: absolute; top: 0; } img { margin-bottom: -4px; } .caption-container { text-align: center; background-color: black; padding: 2px 16px; color: white; } .demo { opacity: 0.6; } .active, .demo:hover { opacity: 1; } img.hover-shadow { transition: 0.3s } .hover-shadow:hover { box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19) } Lightbox &times; 1 / 4 2 / 4 3 / 4 4 / 4 &#10094; &#10095; function openModal() { document.getElementById('myModal').style.display = "block"; } function closeModal() { document.getElementById('myModal').style.display = "none"; } var slideIndex = 1; showSlides(slideIndex); function plusSlides(n) { showSlides(slideIndex += n); } function currentSlide(n) { showSlides(slideIndex = n); } function showSlides(n) { var i; var slides = document.getElementsByClassName("mySlides"); var dots = document.getElementsByClassName("demo"); var captionText = document.getElementById("caption"); alert(slides.length); if (n > slides.length) { slideIndex = 1 } if (n < 1) { slideIndex = slides.length } for (i = 0; i < slides.length; i++) { slides[i].style.display = "none"; } for (i = 0; i < dots.length; i++) { dots[i].className = dots[i].className.replace(" active", ""); } slides[slideIndex - 1].style.display = "block"; dots[slideIndex - 1].className += " active"; captionText.innerHTML = dots[slideIndex - 1].alt; }]]></content>
  </entry>
  <entry>
    <title><![CDATA[flex布局]]></title>
    <url>%2F2018%2F05%2F22%2Fflex%E5%B8%83%E5%B1%80%2F</url>
    <content type="text"><![CDATA[Flex 是 Flexible Box 的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。 任何一个容器都可以指定为 Flex 布局。 例如：123.box&#123; display: flex;&#125; 注意，设为 Flex 布局以后，子元素的float、clear和vertical-align属性将失效。]]></content>
  </entry>
  <entry>
    <title><![CDATA[css元素]]></title>
    <url>%2F2018%2F05%2F18%2Fcss%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%2F</url>
    <content type="text"><![CDATA[html中元素分为行内和块级元素 行内元素指的是书写完成后不会自动换行，并且元素没有宽和高。 块级元素写完后会自动换行，有宽高可以修改。 还有一种特殊的元素叫做行内块元素。 行内元素有：heda meat title lable span br a style em b i strong 块级元素有：body from select textarea h1-h6 html tablebutton hr p ol ul dl cnter div 行内块元素常见的有：img input td]]></content>
  </entry>
  <entry>
    <title><![CDATA[css选择器权重]]></title>
    <url>%2F2018%2F05%2F18%2Fcss%E6%9D%83%E9%87%8D%2F</url>
    <content type="text"><![CDATA[CSS优先级权重计算法 例如：123456789101112#id(100) &gt; .class(10) &gt; 标签选择符(1)细分标签内选择符(1000)&gt;ID选择符(100)&gt;Class选择符(10)&gt;元素选择符(1)标签内选择符:元素标签中定义的样式（Style属性）.class||伪类':active,:focus,:hover,:link,:visited,:first-child,:lang'||属性选择符'[title]'(10)标签||伪元素选择符':first-letter,:first-line,:before,:after'(1)通配符'*'(0)!important优先级最高]]></content>
  </entry>
  <entry>
    <title><![CDATA[dl表格]]></title>
    <url>%2F2018%2F05%2F18%2Fdl%E8%A1%A8%E6%A0%BC%2F</url>
    <content type="text"><![CDATA[html dl dt dd标签元素语法结构与使用 1,语法 例如：123456&lt;dl&gt; &lt;dt&gt;列表标题&lt;/dt&gt; &lt;dd&gt;列表内容&lt;/dd&gt; &lt;dd&gt;列表内容&lt;/dd&gt; ...&lt;/dl&gt; 是一组合标签,使用了dt dd最外层就必须使用dl包裹。]]></content>
  </entry>
  <entry>
    <title><![CDATA[ES5(04)]]></title>
    <url>%2F2018%2F05%2F14%2Fes5(04)%2F</url>
    <content type="text"><![CDATA[函数 1,概述函数是一段可以反复调用的代码块。函数还能接受输入的参数，不同的参数会返回不同的值。1)函数的声明JavaScript 有三种声明函数的方法。 例如：1234567891011121314151617181920//function 命令function print(s)&#123; console.log(s);&#125;//函数表达式var print = function(s)&#123; console.log(s);&#125;;//如果加上函数名，该函数名只在函数体内部有效，在函数体外部无效。var print = function x()&#123; console.log(typeof x);&#125;;//Function 构造函数var add = new Function( 'x', 'y', 'return x+y'); 2)函数的重复声明如果同一个函数被多次声明，后面的声明就会覆盖前面的声明。 3)圆括号运算符，return 语句和递归调用函数时，要使用圆括号运算符。 return语句所带的那个表达式，就是函数的返回值。 函数可以调用自身，这就是递归（recursion）。 例如：1234567function fib(num)&#123; if(num ===0) return 0; if(num ===1) return 1; return fib(num-2) + fib(num-1);&#125;fib(6)//8 4)第一等公民JavaScript 语言将函数看作一种值，与其它值（数值、字符串、布尔值等等）地位相同。 例如：123456789101112131415function add(x,y)&#123; return x+y;&#125;// 将函数赋值给一个变量var a = add;// 将函数作为参数和返回值function a(op)&#123; return op;&#125;a(add(1,2));等价于a(add)(1,2); 5)函数名的提升 例如：123456789101112131415161718192021222324//代码不会报错，整个函数会像变量声明一样，被提升到代码头部。f();function f();//采用赋值语句定义函数，JavaScript 就会报错。f();var f = function()&#123;&#125;等价于var f;f();f = function()&#123;&#125;//如果同时采用function命令和赋值语句声明同一个函数，最后总是采用赋值语句的定义。var f = function()&#123; console.log('1');&#125;function f()&#123; console.log('2');&#125;f() 6)不能在条件语句中声明函数 例如：12345678910//不得在非函数的代码块中声明函数，最常见的情况就是if和try语句。if (foo) &#123; function x() &#123;&#125;&#125;try &#123; function x() &#123;&#125;&#125; catch(e) &#123; console.log(e);&#125; 2,函数的属性和方法1)name 属性函数的name属性返回函数的名字。 例如：123456789101112131415function f()&#123;&#125;f.name //fvar f = function ()&#123;&#125;f.name //fvar f = function myName()&#123;&#125;f.name //myNamevar myFunc = function ()&#123;&#125;function test(f)&#123; console.log(f.name);&#125;test(myFunc) //myFunc 2)length 属性 例如：12function f(a,b)&#123;&#125;f.length //2 length属性就是定义时的参数个数。不管调用时输入了多少个参数，length属性始终等于2。 3)toString()函数的toString方法返回一个字符串，内容是函数的源码。 例如：123456function f()&#123; a(); b(); c();&#125;f.toString(); 3,函数作用域1)定义作用域（scope）指的是变量存在的范围。Javascript 只有两种作用域：一种是全局作用域，变量在整个程序中一直存在，所有地方都可以读取；另一种是函数作用域，变量只在函数内部存在。 函数外部声明的变量就是全局变量（global variable），它可以在函数内部读取。 在函数内部定义的变量，外部无法读取，称为“局部变量”（local variable）。 2)函数内部的变量提升 例如：123456789101112function foo(x)&#123; if(x &gt;100)&#123; var tmp = x - 100; &#125;&#125;等价于function foo(x)&#123; var tmp; if(x &gt;100)&#123; tmp = x - 100; &#125;&#125;]]></content>
  </entry>
  <entry>
    <title><![CDATA[ES5(03)]]></title>
    <url>%2F2018%2F05%2F14%2Fes5(03)%2F</url>
    <content type="text"><![CDATA[错误处理机制 1，Error 实例对象 例如：123var err = new Error('出错了');err.message JavaScript 语言标准只提到，Error实例对象必须有message属性，表示出错时的提示信息。而大多数 JavaScript 引擎，对Error实例还提供name和stack属性，分别表示错误的名称和错误的堆栈，但它们是非标准的，不是每种实现都有。 例如：123messagenamestack 2,Error的6个派生对象。1)SyntaxError 对象SyntaxError对象是解析代码时发生的语法错误。 例如：变量名错误缺少括号 2)ReferenceError 对象ReferenceError对象是引用一个不存在的变量时发生的错误。 例如：使用一个不存在的变量对函数的运行结果或者this赋值 3)RangeError 对象RangeError对象是一个值超出有效范围时发生的错误。 例如：数组长度为负数Number对象的方法参数超出范围函数堆栈超过最大值 4)TypeError 对象TypeError对象是变量或参数不是预期类型时发生的错误。 例如：对字符串、布尔值、数值等原始类型的值使用new命令，就会抛出这种错误，因为new命令的参数应该是一个构造函数调用对象不存在的方法 5)URIError 对象 6)EvalError 对象 3,throw 语句throw语句的作用是手动中断程序执行，抛出一个错误。 例如：123if(x&lt;0)&#123; throw new Error('x 必须为正数');&#125; throw可以抛出任何类型的值 4,try…catch 结构一旦发生错误，程序就中止执行了。JavaScript 提供了try…catch结构，允许对错误进行处理，选择是否往下执行。 例如：123456try &#123; throw new Error('出错了!');&#125; catch (e) &#123; console.log(e.name + ": " + e.message); console.log(e.stack);&#125; 5,finally 代码块try…catch结构允许在最后添加一个finally代码块，表示不管是否出现错误，都必需在最后运行的语句。]]></content>
  </entry>
  <entry>
    <title><![CDATA[ES5(02)]]></title>
    <url>%2F2018%2F05%2F14%2Fes5(02)%2F</url>
    <content type="text"><![CDATA[数据类型 1,概况JavaScript 的数据类型，共有六种。 例如：12345678910111213141516 number(数值)：整数和小数(1,3.14) string(字符串)：文本(hello world) boolean(布尔值)：(true,false) undefined:未定义 null:空值 object:(对象) ``` 数值、字符串、布尔值这三种类型，合称为原始类型（primitive type）的值，即它们是最基本的数据类型，不能再细分了。对象则称为合成类型（complex type）的值，因为一个对象往往是多个原始类型的值的合成，可以看作是一个存放各种值的容器。至于undefined和null，一般将它们看成两个特殊值。 对象是最复杂的数据类型，又可以分成三个子类型。 #### 例如： ```bash object(狭义的对象) array(数组) function(函数) 2,typeof 运算符JavaScript 有三种方法，可以确定一个值到底是什么类型。 例如：123typeof(运算符)instanceof(运算符)Object.prototype.toString(方法) typeof运算符可以返回一个值的数据类型。 例如：12345678910111213typeof 123 //numbeltypeof '123' //stringtypeof false //boobeanfunction f()&#123;&#125;typeof f //functiontypeof undefinedw //undefinedtypeof null //object typeof window //objecttypeof &#123;&#125; //objecttypeof [] //object typeof可以用来检查一个没有声明的变量，而不报错。 例如：12v //err:v is not definedtypeof v //undefined 这个特点通常用在判断语句。 例如：12345678//错误的写法if(v)&#123; //...&#125;//正确的写法if(typeof v ==== 'undefined')&#123; //...&#125; 3,null 和 undefined1)概述null与undefined都可以表示“没有”，含义非常相似。将一个变量赋值为undefined或null，老实说，语法效果几乎没区别。 例如：123var a = undefined;//或者var a = null; 在if语句中，它们都会被自动转为false，相等运算符（==）甚至直接报告两者相等。 例如：123456789101112131415if(!undefined)&#123; console.log('undefined is false');&#125; if(!null)&#123; console.log('null is false');&#125;if(undefined == null)&#123; console.log('在相等运算符的前提下相等');&#125;if(undefined === null)&#123; console.log('在严格相等运算符的前提下相等');&#125; 核心区别：null是一个表示“空”的对象，转为数值时为0；undefined是一个表示”此处无定义”的原始值，转为数值时为NaN。 例如：12345Number(undefined) //NaN5 + undefined //NaNNumber(null) //05 + null //5 2)用法和含义返回undefined的典型场景。 例如：12345678910111213141516171819// 变量声明了，但没有赋值。var i;// 调用函数时，应该提供的参数没有提供，该参数等于 undefinedfunction f(x)&#123; return x;&#125;f()// 对象没有赋值的属性var o = new Object();o.p // 函数没有返回值时，默认返回 undefinedfunction f()&#123;&#125;f() 4,布尔值1)下列运算符会返回布尔值： 例如：1234两元逻辑运算符：&amp;&amp;(and) ||(or) 前置逻辑运算符：!(not)相等运算符：=== !== == !=比较运算符：&gt; &gt;= &lt; &lt;= 2)除了下面六个值被转为false，其他值都视为true。 例如：123456undefined nullfalse0NaN''或""]]></content>
  </entry>
  <entry>
    <title><![CDATA[ES5(01)]]></title>
    <url>%2F2018%2F05%2F12%2Fes5(01)%2F</url>
    <content type="text"><![CDATA[语法 一基本语法：1,语句和表达式的区别：1）前者主要为了进行某种操作，一般情况下不需要返回值；后者则是为了得到返回值，一定会返回一个值。2)语句以分号结尾，一个分号就表示一个语句结束。多个语句可以写在一行内。 例如：1var a = 4;var b = 5; 分号前面可以没有任何内容，JavaScript引擎将其视为空语句。 例如：1;;; 3)表达式不需要分号结尾。一旦在表达式后面添加分号，则 JavaScript 引擎就将表达式视为语句，这样会产生一些没有任何意义的语句。 例如：121+2;'abc'; 2,变量1)JavaScript 的变量名区分大小写，A和a是两个不同的变量。2)变量的声明和赋值，是分开的两个步骤。 例如：1234var a = 1;等价于var a;a=1; 3)变量提升JavaScript 引擎的工作方式是，先解析代码，获取所有被声明的变量，然后再一行一行地运行。这造成的结果，就是所有的变量的声明语句，都会被提升到代码的头部，这就叫做变量提升。 例如：123456console.log(a);var a = 1;这时变量a还没有声明和赋值，所以这是一种错误的做法，但是实际上不会报错。因为存在变量提升，真正运行的是下面的代码。var a;console.log(a);//undefineda=1; 3,标识符1)标识符（identifier）指的是用来识别各种值的合法名称。常见的如变量名、函数名。JavaScript 语言的标识符对大小写敏感，所以a和A是两个不同的标识符。2)标识符有一套命名规则，不符合规则的就是非法标识符。JavaScript 引擎遇到非法标识符，就会报错。命名规则：第一个字符，可以是任意 Unicode 字母（包括英文字母和其他语言的字母），以及美元符号（$）和下划线（_）。第二个字符及后面的字符，除了 Unicode 字母、美元符号和下划线，还可以用数字0-9。 例如：1234567891011 合法arg0_tmpvar 临时变量 = 1；$elem 不合法 1a // 第一个字符不能是数字 23 *** // 标识符不能包含星号 a+b // 标识符不能包含加号 -d // 标识符不能包含减号或连词线 1JavaScript有一些保留字，不能用作标识符：arguments、break、case、catch、class、const、continue、debugger、default、delete、do、else、enum、eval、export、extends、false、finally、for、function、if、implements、import、in、instanceof、interface、let、new、null、package、private、protected、public、return、static、super、switch、this、throw、true、try、typeof、var、void、while、with、yield。 4,注释1)// 这是单行注释2)/ 这是 多行 注释 /5,区块1)JavaScript 使用大括号，将多个相关的语句组合在一起，称为“区块”（block）。6,条件语句1)if 结构if结构先判断一个表达式的布尔值，然后根据布尔值的真伪，执行不同的语句。 例如：123if(m === 1)&#123; m = m+1;&#125; 赋值表达式（=）、严格相等运算符（===）和相等运算符（==）。尤其是赋值表达式不具有比较作用。 例如：12345 var x = 1; var y = 2;if(x = y)&#123; console.log(x);&#125; 常量不能被赋值。 例如：12if(2=x)&#123;&#125;//报错if(x=2)&#123;&#125;//不报错 2)if…else 结构3)switch结构多个if…else连在一起使用的时候，可以转为使用更方便的switch结构。 例如：123456789101112131415161718var x =2;if(x==0)&#123; console.log(x);&#125;else if(x==1)&#123; console.log(x);&#125;else&#123; console.log(x);&#125;等价于switch语句内部采用的是“严格相等运算符”。switch(x)&#123; case 1:console.log(x); break; case 2:console.log(x); break; default:console.log(x);&#125; 4)三元运算符 ?:如果“条件”为true，则返回“表达式1”的值，否则返回“表达式2”的值。 例如：1(条件) ? 表达式1 : 表达式2 7,循环语句1)while 循环 例如：12345var i =0;while(i&lt;100)&#123; console.log(i); i++;&#125; 2)for 循环 例如：123for(var i=0;i&lt;5;i++)&#123; console.log(i);&#125; 3)do…while 循环 例如：123456var a =1;var b =2;do&#123; console.log(a); a++;&#125;while(a&lt;b); 不管条件是否为真，do…while循环至少运行一次。另外，while语句后面的分号注意不要省略。4)break 语句和 continue 语句break语句和continue语句都具有跳转作用，可以让代码不按既有的顺序执行。break语句用于跳出代码块或循环。 例如：123456var i = 0;while(i &lt; 100) &#123; console.log('i 当前为：' + i); i++; if (i === 10) break; &#125; continue语句用于立即终止本轮循环，返回循环结构的头部，开始下一轮循环。 例如：123456var i = 0;while(i &lt; 100) &#123; i++; if (i%2 === 0) continue; console.log('i 当前为：' + i); &#125; 5)标签（label）JavaScript 语言允许，语句的前面有标签（label），相当于定位符，用于跳转到程序的任意位置。标签可以是任意的标识符，但不能是保留字，语句部分可以是任意语句。标签通常与break语句和continue语句配合使用，跳出特定的循环。 例如：1234567top: for(var i=0;i&lt;3;i++)&#123; for(var j=0;j&lt;3;j++)&#123; if(i===1 &amp;&amp; j===1)break top; console.log('i='+i+',j='+j); &#125; &#125; 上面代码为一个双重循环区块，break命令后面加上了top标签（注意，top不用加引号），满足条件时，直接跳出双层循环。如果break语句后面不使用标签，则只能跳出内层循环，进入下一次的外层循环。]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F05%2F10%2Fhello-world%2F</url>
    <content type="text"><![CDATA[#Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
